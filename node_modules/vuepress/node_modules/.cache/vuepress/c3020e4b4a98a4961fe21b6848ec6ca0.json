{"remainingRequest":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\docs\\softwareEngineering\\README.md?vue&type=template&id=6cae2416&","dependencies":[{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\docs\\softwareEngineering\\README.md","mtime":1549098189959},{"path":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546868327989},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558414119184},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546868327989},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1558414119184},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1558414126042}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"概述\"><a class=\"header-anchor\" href=\"#概述\" aria-hidden=\"true\">#</a> 概述</h1>\n<p>软件工程学科是在 20 世纪 60 年代后期，由软件工作者们研究消除软件危机的途径时逐渐形成的工程学科。</p>\n<h2 id=\"软件危机\"><a class=\"header-anchor\" href=\"#软件危机\" aria-hidden=\"true\">#</a> 软件危机</h2>\n<h3 id=\"背景\"><a class=\"header-anchor\" href=\"#背景\" aria-hidden=\"true\">#</a> 背景</h3>\n<ul>\n<li>\n<p>计算机系统发展的早期时代 (20 世纪 60 年代中期以前)</p>\n<ul>\n<li>\n<p>小规模程序</p>\n</li>\n<li>\n<p>使用者和编写者是同一个(组)人</p>\n</li>\n</ul>\n</li>\n<li>\n<p>计算机系统发展的第二个时代 (20 世纪 60 年代中期到 70 年代中期)</p>\n<ul>\n<li>\n<p>出现“软件作坊”</p>\n</li>\n<li>\n<p>数量急剧膨胀</p>\n</li>\n<li>\n<p>维护软件时消耗的资源急剧上升：需要修改运行时的错误；需要修改程序以适应新需求、新硬件/操作系统环境</p>\n</li>\n<li>\n<p>个体化特征让许多程序成为不可维护的程序</p>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"tip custom-block\"><p class=\"custom-block-title\">两个主要问题</p>\n<ul>\n<li>\n<p><strong>如何开发</strong>软件，以满足对软件日益增长的需求。</p>\n</li>\n<li>\n<p><strong>如何维护</strong>数量不断膨胀的已有软件。</p>\n</li>\n</ul>\n</div>\n<h3 id=\"表现\"><a class=\"header-anchor\" href=\"#表现\" aria-hidden=\"true\">#</a> 表现</h3>\n<ol>\n<li>\n<p>对软件开发成本和进度估计不准确</p>\n</li>\n<li>\n<p>用户对“已经完成”的软件系统不满意</p>\n</li>\n<li>\n<p>软件产品的质量靠不住</p>\n</li>\n<li>\n<p>软件常常不可维护</p>\n</li>\n<li>\n<p>软件没有适当的文档资料</p>\n</li>\n<li>\n<p>软件成本在计算机系统总成本中所占比例逐年上升</p>\n</li>\n<li>\n<p>软件开发生产率提升的速度，跟不上计算机应用迅速普及深入的趋势</p>\n</li>\n</ol>\n<h3 id=\"原因\"><a class=\"header-anchor\" href=\"#原因\" aria-hidden=\"true\">#</a> 原因</h3>\n<ul>\n<li>\n<p>软件本身特点</p>\n<ol>\n<li>\n<p>软件缺乏“可见性”</p>\n<ul>\n<li>\n<p>开发过程进展难以衡量，质量较难评价</p>\n</li>\n<li>\n<p>管理和控制软件开发过程困难</p>\n</li>\n</ul>\n</li>\n<li>\n<p>软件规模庞大</p>\n<ul>\n<li>\n<p>为在预定时间开发规模庞大的软件，需要多人合作，难以保证质量</p>\n</li>\n<li>\n<p>急需严格而科学的管理</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>开发维护方法不正确</p>\n<ol>\n<li>\n<p>忽视软件需求分析的重要性</p>\n<ul>\n<li>\n<p>不同阶段对软件修改需要付出的代价是不同的</p>\n</li>\n<li>\n<p>没有做好准确的前期准备会造成生产出的“已完成”的软件完全不符合用户需求</p>\n</li>\n</ul>\n</li>\n<li>\n<p>只重视程序而忽略软件配置其余成分</p>\n<ul>\n<li>\n<p>编写程序的工作量只有 10% ~ 20%</p>\n</li>\n<li>\n<p>一个软件完整的配置包括程序、文档和数据等成分</p>\n</li>\n</ul>\n</li>\n<li>\n<p>轻视软件维护</p>\n<ul>\n<li>\n<p>软件寿命很长时需要改正使用中发现的每一个前在错误，也要适应环境变化（硬件、操作系统更新换代）</p>\n</li>\n<li>\n<p>维护占软件总费用的 55% ~ 70%</p>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"消除途径\"><a class=\"header-anchor\" href=\"#消除途径\" aria-hidden=\"true\">#</a> 消除途径</h3>\n<ul>\n<li>\n<p>技术措施</p>\n<ol>\n<li>\n<p>认识到<strong>软件是程序、数据和相关文档的完整集合</strong></p>\n<ul>\n<li>\n<p><strong>程序</strong>是能够完成预定功能和性能的可执行的指令序列</p>\n</li>\n<li>\n<p><strong>数据</strong>是使程序能够适当地处理信息的数据结构</p>\n</li>\n<li>\n<p><strong>文档</strong>是开发、使用和维护程序所需要的图文资料</p>\n</li>\n</ul>\n</li>\n<li>\n<p>开发和使用更好的软件工具<br>\n使用适当的软件工具来辅助开发人员，让他们从繁重重复的工作中解脱出来</p>\n</li>\n</ol>\n</li>\n<li>\n<p>组织管理措施</p>\n<ol>\n<li>\n<p>积极借鉴各种工程项目中积累的行之有效的管理方法<br>\n软件开发不是个体劳动，需要组织良好、管理严密、各类人员协同配合的工程项目</p>\n</li>\n<li>\n<p>推广使用在实践中总结出来的软件开发的成功的技术和方法</p>\n</li>\n<li>\n<p>尽快消除计算机系统早起发展形成的错误概念和做法</p>\n</li>\n</ol>\n</li>\n</ul>\n</div>\n",null]}