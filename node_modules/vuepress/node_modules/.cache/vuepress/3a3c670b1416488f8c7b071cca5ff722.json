{"remainingRequest":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\docs\\java\\应用程序编程接口.md?vue&type=template&id=f7c6146a&","dependencies":[{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\docs\\java\\应用程序编程接口.md","mtime":1558435100715},{"path":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546868327989},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1558414119184},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546868327989},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1558414119184},{"path":"C:\\Users\\momg\\Documents\\Workspace\\Github\\localhost-8080.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1558414126042}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._v(\" \"),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26),\n    _vm._v(\" \"),\n    _vm._m(27),\n    _vm._v(\" \"),\n    _vm._m(28),\n    _vm._v(\" \"),\n    _vm._m(29),\n    _vm._v(\" \"),\n    _vm._m(30),\n    _vm._v(\" \"),\n    _vm._m(31),\n    _vm._v(\" \"),\n    _vm._m(32),\n    _vm._v(\" \"),\n    _vm._m(33),\n    _vm._v(\" \"),\n    _vm._m(34),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"对于每种基本数据类型, Java 都提供了与其对应的类。这些类称为包装类。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(35),\n    _vm._v(\" \"),\n    _vm._m(36),\n    _vm._v(\" \"),\n    _vm._m(37),\n    _vm._v(\" \"),\n    _vm._m(38),\n    _vm._v(\" \"),\n    _c(\n      \"h4\",\n      { attrs: { id: \"自动装箱\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#自动装箱\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 自动装箱 \"),\n        _c(\"Badge\", { attrs: { text: \"Java SE 5.0+\" } })\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(39),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"例如：\")]),\n    _vm._v(\" \"),\n    _vm._m(40),\n    _c(\"p\", [_vm._v(\"相当于：\")]),\n    _vm._v(\" \"),\n    _vm._m(41),\n    _vm._m(42),\n    _vm._v(\" \"),\n    _c(\n      \"h4\",\n      { attrs: { id: \"自动拆箱\" } },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#自动拆箱\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 自动拆箱 \"),\n        _c(\"Badge\", { attrs: { text: \"Java SE 5.0+\" } })\n      ],\n      1\n    ),\n    _vm._v(\" \"),\n    _vm._m(43),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"例如：\")]),\n    _vm._v(\" \"),\n    _vm._m(44),\n    _c(\"p\", [_vm._v(\"相当于：\")]),\n    _vm._v(\" \"),\n    _vm._m(45),\n    _c(\"p\", [_vm._v(\"当发生基本数据类型和包装类运算时，会发生自动拆箱。\")]),\n    _vm._v(\" \"),\n    _vm._m(46),\n    _vm._v(\" \"),\n    _vm._m(47),\n    _vm._v(\" \"),\n    _vm._m(48),\n    _vm._v(\" \"),\n    _vm._m(49),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"该类提供了一系列静态方法，这些方法实现了基本的数学运算，如三角函数、绝对值、平方根等。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(50),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"精确浮点(strict float point)，用于修饰类、接口和方法。\")]),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"被修饰的代码在执行中以80位二进制数来运算小数，结果会保留为64位。\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(51),\n    _vm._v(\" \"),\n    _vm._m(52),\n    _vm._v(\" \"),\n    _vm._m(53),\n    _vm._v(\" \"),\n    _vm._m(54),\n    _vm._v(\" \"),\n    _vm._m(55),\n    _vm._v(\" \"),\n    _vm._m(56),\n    _vm._v(\" \"),\n    _vm._m(57),\n    _vm._v(\" \"),\n    _vm._m(58),\n    _vm._v(\" \"),\n    _vm._m(59),\n    _vm._v(\" \"),\n    _vm._m(60),\n    _vm._v(\" \"),\n    _vm._m(61),\n    _vm._v(\" \"),\n    _vm._m(62),\n    _vm._v(\" \"),\n    _vm._m(63),\n    _vm._v(\" \"),\n    _vm._m(64),\n    _vm._v(\" \"),\n    _vm._m(65),\n    _vm._v(\" \"),\n    _vm._m(66),\n    _vm._v(\" \"),\n    _vm._m(67),\n    _vm._v(\" \"),\n    _vm._m(68),\n    _vm._v(\" \"),\n    _vm._m(69),\n    _vm._v(\" \"),\n    _vm._m(70)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"应用程序编程接口\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#应用程序编程接口\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 应用程序编程接口\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"概述\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#概述\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 概述\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"应用程序编程接口 (Application Programming Interface, \"),\n      _c(\"strong\", [_vm._v(\"API\")]),\n      _vm._v(\") 是预先定义的一套代码，用于程序员直接调用来实现其具体需求。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"语言基础类库-package-java-lang\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#语言基础类库-package-java-lang\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 语言基础类库 (Package \"),\n      _c(\"code\", [_vm._v(\"java.lang\")]),\n      _vm._v(\")\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"object类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#object类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Object\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"基本信息\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#基本信息\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 基本信息\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"Package\")]),\n      _vm._v(\" java.lang\"),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"public class Object\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"Object\")]),\n          _vm._v(\n            \"类是所有类的父类。在 Java 中处于顶级父类的地位，是类层级结构的根类。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"任何类对象都可以用\"),\n          _c(\"code\", [_vm._v(\"Object\")]),\n          _vm._v(\"类的对象来接收。\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"重要方法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#重要方法\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 重要方法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [_c(\"code\", [_vm._v(\"clone()\")])]),\n        _vm._v(\" \"),\n        _c(\"ul\", [\n          _c(\"li\", [_c(\"p\", [_vm._v(\"克隆一个对象。\")])]),\n          _vm._v(\" \"),\n          _c(\"li\", [\n            _c(\"p\", [\n              _vm._v(\"当一个对象要被克隆时，\"),\n              _c(\"strong\", [\n                _vm._v(\"它所对应的类必须实现\"),\n                _c(\"code\", [_vm._v(\"Cloneable\")]),\n                _vm._v(\"接口\")\n              ]),\n              _vm._v(\"。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"li\", [\n            _c(\"p\", [\n              _vm._v(\"克隆完成后会产生一个新的对象。\"),\n              _c(\"strong\", [_vm._v(\"新对象和原对象的地址不同，但属性值相同\")]),\n              _vm._v(\"。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"li\", [\n            _c(\"p\", [\n              _c(\"code\", [_vm._v(\"Cloneable\")]),\n              _vm._v(\"接口\"),\n              _c(\"br\"),\n              _vm._v(\n                \"\\n其中没有任何属性和方法，仅用于标识此类产生的对象可以被克隆。\"\n              )\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_c(\"code\", [_vm._v(\"finalize()\")])]),\n        _vm._v(\" \"),\n        _c(\"ul\", [\n          _c(\"li\", [\n            _c(\"p\", [\n              _vm._v(\"通知\"),\n              _c(\"code\", [_vm._v(\"GC\")]),\n              _vm._v(\"回收当前对象。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"li\", [\n            _c(\"p\", [\n              _vm._v(\"即使\"),\n              _c(\"code\", [_vm._v(\"GC\")]),\n              _vm._v(\"已经开始运行，也只回收当前对象而不回收其他对象。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"li\", [\n            _c(\"p\", [\n              _c(\"code\", [_vm._v(\"System.gc()\")]),\n              _vm._v(\"通知\"),\n              _c(\"code\", [_vm._v(\"GC\")]),\n              _vm._v(\"回收所有可以回收的对象。\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"getClass()\")]),\n          _c(\"br\"),\n          _vm._v(\"\\n获取对象的运行时类对象（如，后续可用于反射）。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"hashCode()\")]),\n          _c(\"br\"),\n          _vm._v(\n            \"\\n获取该对象的哈希码值，在一定范围内可以认为是唯一的。哈希码为一串 32 位的二进制数据。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"toString()\")]),\n          _c(\"br\"),\n          _vm._v(\"\\n打印对象。实际调用对象本身的\"),\n          _c(\"code\", [_vm._v(\"toString()\")]),\n          _vm._v(\"。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"equals(Object obj)\")]),\n          _c(\"br\"),\n          _vm._v(\"\\n比较两个对象是否相等。默认比较对象的地址，但对于\"),\n          _c(\"code\", [_vm._v(\"File\")]),\n          _vm._v(\"，\"),\n          _c(\"code\", [_vm._v(\"String\")]),\n          _vm._v(\"，\"),\n          _c(\"code\", [_vm._v(\"Date\")]),\n          _vm._v(\"和包装类来说，它们比较地是对象值。\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"tip custom-block\" }, [\n          _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"特别地\")]),\n          _vm._v(\" \"),\n          _c(\"p\", [\n            _vm._v(\"当手动重写\"),\n            _c(\"code\", [_vm._v(\"equals()\")]),\n            _vm._v(\"时，思路为:\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"ol\", [\n            _c(\"li\", [\n              _vm._v(\"判断地址是否一致(\"),\n              _c(\"code\", [_vm._v(\"if (this == obj)\")]),\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _vm._v(\"判断参数是否为空(\"),\n              _c(\"code\", [_vm._v(\"if (obj == null)\")]),\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _vm._v(\"判断类型是否一致(\"),\n              _c(\"code\", [_vm._v(\"if (this.getClass() != obj.getClass())\")]),\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [_vm._v(\"判断属性值是否一致\")])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [_c(\"hr\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"system类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#system类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"System\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"异常\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#异常\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 异常\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"线程\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#线程\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 线程\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"string类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#string类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"String\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"基本信息-2\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#基本信息-2\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 基本信息\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"strong\", [_vm._v(\"Package\")]),\n      _vm._v(\" java.lang\"),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"public final class String\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"String\")]),\n          _vm._v(\"类是一个最终类，表示字符串。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"所有字符串都是\"),\n          _c(\"code\", [_vm._v(\"String\")]),\n          _vm._v(\"类的实例。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"字符串是常量，创建后不可更改，但可以被共享。\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"重要方法-2\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#重要方法-2\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 重要方法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"chatAt()\")]),\n          _c(\"br\"),\n          _vm._v(\"\\n获取字符串指定下标字符。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"length()\")]),\n          _c(\"br\"),\n          _vm._v(\"\\n获取字符串长度。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _c(\"code\", [_vm._v(\"toCharArray()\")]),\n          _c(\"br\"),\n          _vm._v(\"\\n将字符串转化为字符数组。\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"其他不改变原串的方法\")]),\n        _vm._v(\" \"),\n        _c(\"table\", [\n          _c(\"thead\", [\n            _c(\"tr\", [\n              _c(\"th\", [_vm._v(\"方法\")]),\n              _vm._v(\" \"),\n              _c(\"th\", [_vm._v(\"描述\")]),\n              _vm._v(\" \"),\n              _c(\"th\", [_vm._v(\"备注\")])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tbody\", [\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"compareTo(String another)\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"判断两个字符串大小，根据返回值政府来确定\")]),\n              _vm._v(\" \"),\n              _c(\"td\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"concat(String str)\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"拼接字符串，不该面原字符串\")]),\n              _vm._v(\" \"),\n              _c(\"td\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"contains(String str)\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"是否包含该子串\")]),\n              _vm._v(\" \"),\n              _c(\"td\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"equals(Object o)\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"是否相等\")]),\n              _vm._v(\" \"),\n              _c(\"td\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"getBytes()\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"将字符串转化为字节数组\")]),\n              _vm._v(\" \"),\n              _c(\"td\", [\n                _vm._v(\"通过\"),\n                _c(\"code\", [_vm._v(\"String\")]),\n                _vm._v(\"的构造方法将字节数组转化为字符串\")\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"indexOf(int ch, int index)\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"指定下标开始寻找指定字符第一次出现的位置\")]),\n              _vm._v(\" \"),\n              _c(\"td\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"valueOf()\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"将传入值转换为字符串\")]),\n              _vm._v(\" \"),\n              _c(\"td\", [\n                _vm._v(\"传入对象则会调用对象的\"),\n                _c(\"code\", [_vm._v(\"toString()\")]),\n                _vm._v(\"；\"),\n                _c(\"br\"),\n                _vm._v(\"传入字符数组对象，则打印其内容\")\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [\n                _c(\"code\", [_vm._v(\"replaceAll(String reg, String str)\")])\n              ]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"替换指定内容\")]),\n              _vm._v(\" \"),\n              _c(\"td\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"matches(String reg)\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"是否匹配指定规则\")]),\n              _vm._v(\" \"),\n              _c(\"td\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"tr\", [\n              _c(\"td\", [_c(\"code\", [_vm._v(\"split(String reg)\")])]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(\"按指定规则切割字符串\")]),\n              _vm._v(\" \"),\n              _c(\"td\", [\n                _vm._v(\"作为切割的符号会被消除；\"),\n                _c(\"br\"),\n                _vm._v(\"若两个切割符号相连，则会被分出一个空字符串\"),\n                _c(\"code\", [_vm._v('\"\"')])\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"特别地\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v('拼接字符串可以使用运算符\"'),\n            _c(\"code\", [_vm._v(\"+\")]),\n            _vm._v('\"，本质上 Java 编译器会调用'),\n            _c(\"code\", [_vm._v(\"StringBuffer\")]),\n            _vm._v(\"（或类似技术）来实现这个拼接操作。\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\"拼接多个字符串建议使用\"),\n            _c(\"code\", [_vm._v(\"StringBuilder\")]),\n            _vm._v(\"类，少量字符串使用\"),\n            _c(\"code\", [_vm._v(\"+\")]),\n            _vm._v(\"运算符\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _c(\"code\", [_vm._v(\"StringBuilder\")]),\n            _vm._v(\"和\"),\n            _c(\"code\", [_vm._v(\"StringBuffer\")]),\n            _vm._v(\"使用方法完全一致\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [\n              _c(\"p\", [\n                _c(\"code\", [_vm._v(\"StringBuilder\")]),\n                _vm._v(\"线程不安全\")\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"p\", [\n                _c(\"code\", [_vm._v(\"StringBuffer\")]),\n                _vm._v(\"线程安全\")\n              ])\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\"故代码：\"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\"strong\", [_vm._v(\"Input\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n              _c(\"code\", [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"String\")]\n                ),\n                _vm._v(\" s \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"a\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\ns \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"+=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"b\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ]),\n          _c(\"p\", [_vm._v(\"实际上的执行效果是：\")]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n              _c(\"code\", [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"String\")]\n                ),\n                _vm._v(\" s \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"a\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\ns \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"new\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"StringBuilder\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"a\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"append\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"b\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\".\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n                  _vm._v(\"toString\")\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ]),\n          _c(\"p\", [\n            _vm._v(\"在最后的\"),\n            _c(\"code\", [_vm._v(\"toString()\")]),\n            _vm._v(\"中生成了新的字符串对象，类似于（真实过程更加复杂）：\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n              _c(\"code\", [\n                _vm._v(\"s \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"new\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"String\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"ab\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"分析代码\")]),\n        _c(\"br\"),\n        _vm._v(\" \"),\n        _c(\"strong\", [_vm._v(\"Input\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"String\")\n            ]),\n            _vm._v(\" s1 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"ab\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"String\")\n            ]),\n            _vm._v(\" s2 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"new\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"String\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"ab\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"String\")\n            ]),\n            _vm._v(\" s4 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"a\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\ns4 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"+=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"b\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"第一句\")]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n              _c(\"code\", [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"String\")]\n                ),\n                _vm._v(\" s1 \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"ab\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ]),\n          _c(\"p\", [\n            _vm._v(\"内存图：\"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\"img\", {\n              attrs: { src: \"/img/String_01.jpg\", alt: 'String s1 = \"ab\";' }\n            })\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"第二句\")]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n              _c(\"code\", [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"String\")]\n                ),\n                _vm._v(\" s2 \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"new\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"String\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"(\")]\n                ),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"ab\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\")\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ]),\n          _c(\"p\", [\n            _vm._v(\"内存图：\"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\"img\", {\n              attrs: {\n                src: \"/img/String_02.jpg\",\n                alt: 'String s2 = new String(\"ab\");'\n              }\n            })\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"第三句\")]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n              _c(\"code\", [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token class-name\" } },\n                  [_vm._v(\"String\")]\n                ),\n                _vm._v(\" s4 \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"a\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ]),\n          _c(\"p\", [\n            _vm._v(\"内存图：\"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\"img\", {\n              attrs: { src: \"/img/String_03.jpg\", alt: 'String s4 = \"a\";' }\n            })\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"第四句\")]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n              _c(\"code\", [\n                _vm._v(\"s4 \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"+=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                  _vm._v('\"b\"')\n                ]),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\";\")]\n                ),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ]),\n          _c(\"p\", [\n            _vm._v(\"由\"),\n            _c(\"code\", [_vm._v(\"StringBuilder\")]),\n            _vm._v(\"实现\"),\n            _c(\"code\", [_vm._v(\"+=\")]),\n            _vm._v(\"操作，具体步骤为：\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"ol\", [\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\"生成\"),\n                _c(\"code\", [_vm._v(\"StringBuilder\")]),\n                _vm._v(\"对象\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n                _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n                  _c(\"code\", [\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token keyword\" } },\n                      [_vm._v(\"new\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token class-name\" } },\n                      [_vm._v(\"StringBuilder\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token string\" } },\n                      [_vm._v('\"a\"')]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _vm._v(\"\\n\")\n                  ])\n                ])\n              ]),\n              _c(\"p\", [\n                _vm._v(\"内存图：\"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _c(\"img\", {\n                  attrs: {\n                    src: \"/img/String_04.jpg\",\n                    alt: 'new StringBuilder(\"a\")'\n                  }\n                })\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"p\", [\n                _c(\"code\", [_vm._v(\"StringBuilder\")]),\n                _vm._v(\"对象取\"),\n                _c(\"code\", [_vm._v(\"append()\")]),\n                _vm._v(\"方法拼接字符串\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n                _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n                  _c(\"code\", [\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token keyword\" } },\n                      [_vm._v(\"new\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token class-name\" } },\n                      [_vm._v(\"StringBuilder\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token string\" } },\n                      [_vm._v('\"a\"')]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\".\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token function\" } },\n                      [_vm._v(\"append\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token string\" } },\n                      [_vm._v('\"b\"')]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _vm._v(\"\\n\")\n                  ])\n                ])\n              ]),\n              _c(\"p\", [\n                _vm._v(\"内存图：\\n\"),\n                _c(\"img\", {\n                  attrs: {\n                    src: \"/img/String_05.jpg\",\n                    alt: 'new StringBuilder(\"a\").append(\"b\")'\n                  }\n                }),\n                _c(\"br\"),\n                _vm._v(\"\\n堆内存\"),\n                _c(\"code\", [_vm._v(\"0x3f4c\")]),\n                _vm._v('断开与常量\"a\"('),\n                _c(\"code\", [_vm._v(\"0x45fa\")]),\n                _vm._v(')的链接，转而链接常量\"ab\"('),\n                _c(\"code\", [_vm._v(\"0x003d\")]),\n                _vm._v(\")。\")\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\"调用\"),\n                _c(\"code\", [_vm._v(\"toString()\")]),\n                _vm._v(\"生成新的\"),\n                _c(\"code\", [_vm._v(\"String\")]),\n                _vm._v(\"对象\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n                _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n                  _c(\"code\", [\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token keyword\" } },\n                      [_vm._v(\"new\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token class-name\" } },\n                      [_vm._v(\"StringBuilder\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token string\" } },\n                      [_vm._v('\"a\"')]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\".\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token function\" } },\n                      [_vm._v(\"append\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token string\" } },\n                      [_vm._v('\"b\"')]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\".\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token function\" } },\n                      [_vm._v(\"toString\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _vm._v(\"\\n\")\n                  ])\n                ])\n              ]),\n              _c(\"p\", [\n                _vm._v(\"内存图：\"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _c(\"img\", {\n                  attrs: {\n                    src: \"/img/String_06.jpg\",\n                    alt: 'new StringBuilder(\"a\").append(\"b\").toString()'\n                  }\n                })\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\"将新生成的\"),\n                _c(\"code\", [_vm._v(\"String\")]),\n                _vm._v(\"对象的管理权交给\"),\n                _c(\"code\", [_vm._v(\"s4\")]),\n                _vm._v(\"（赋值）\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n                _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n                  _c(\"code\", [\n                    _vm._v(\"s4 \"),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token operator\" } },\n                      [_vm._v(\"=\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token keyword\" } },\n                      [_vm._v(\"new\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token class-name\" } },\n                      [_vm._v(\"StringBuilder\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token string\" } },\n                      [_vm._v('\"a\"')]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\".\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token function\" } },\n                      [_vm._v(\"append\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token string\" } },\n                      [_vm._v('\"b\"')]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\".\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token function\" } },\n                      [_vm._v(\"toString\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\"(\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\")\")]\n                    ),\n                    _c(\n                      \"span\",\n                      { pre: true, attrs: { class: \"token punctuation\" } },\n                      [_vm._v(\";\")]\n                    ),\n                    _vm._v(\"\\n\")\n                  ])\n                ])\n              ]),\n              _c(\"p\", [\n                _vm._v(\"内存图：\"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _c(\"img\", {\n                  attrs: {\n                    src: \"/img/String_07.jpg\",\n                    alt: 's4 = new StringBuilder(\"a\").append(\"b\").toString();'\n                  }\n                }),\n                _vm._v(\"\\n栈内存内\"),\n                _c(\"code\", [_vm._v(\"s4\")]),\n                _vm._v('断开与常量\"a\"('),\n                _c(\"code\", [_vm._v(\"0x45fa\")]),\n                _vm._v(\")的链接，转而链接堆内存\"),\n                _c(\"code\", [_vm._v(\"0x7bce\")]),\n                _vm._v(\"。\")\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"p\", [\n                _vm._v(\"结束操作，最终结果\"),\n                _c(\"br\"),\n                _vm._v(\"\\n内存图：\"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _c(\"img\", { attrs: { src: \"/img/String_08.jpg\", alt: \"完成\" } })\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"关于编码\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"按照某些规律将字符映射成字节。这个记录规则就是编码表\")]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"名称\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"内容\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"特点\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"ASCII\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0 至 127\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"不完全\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"西欧码表 ISO-8859-1\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"西欧字符\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"一个字母占 1 字节\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"GB2312\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"常见基本简体汉字和部分常用繁体汉字\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"一个字符占 2 字节\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"UTF-8\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"常见语言的常见字符\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"一个字符占 3 字节\")])\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"→ \"),\n      _c(\"a\", { attrs: { href: \"#scanner%E7%B1%BB\" } }, [\n        _vm._v(\"关于\"),\n        _c(\"code\", [_vm._v(\"Scanner\")]),\n        _vm._v(\"类\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"正则表达式\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#正则表达式\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 正则表达式\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"正则表达式本质上是\"),\n      _c(\"strong\", [_vm._v(\"指定匹配\")]),\n      _vm._v(\"或\"),\n      _c(\"strong\", [_vm._v(\"筛选规则\")]),\n      _vm._v(\"的一系列表达式。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"规则\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\n            \"元字符与限定符：正则表达式中含有表达特殊意义的字符，这些字符成为元字符；在正则表达式中，需要表示元字符出现次数等逻辑规则时，使用限定符来表示。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"在 Java 中，由于使用\"),\n          _c(\"code\", [_vm._v(\"\\\\\")]),\n          _vm._v(\"转义且某些元字符中本身包含\"),\n          _c(\"code\", [_vm._v(\"\\\\\")]),\n          _vm._v(\"，故在使用时需要写作\"),\n          _c(\"code\", [_vm._v(\"\\\\\\\\\")]),\n          _vm._v(\"。如：表示任意一个数字的正则表达式在 Java 中写作\"),\n          _c(\"code\", [_vm._v(\"\\\\\\\\d\")]),\n          _vm._v(\"。\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"元字符/限定符\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"描述\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\".\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"任意字符\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\d\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"0至9任意一个数字\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\D\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"任意一个非数字\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\s\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"空格类字符，如\"),\n            _c(\"code\", [_vm._v(\"\\\\t\")]),\n            _vm._v(\", \"),\n            _c(\"code\", [_vm._v(\"\\\\n\")]),\n            _vm._v(\", \"),\n            _c(\"code\", [_vm._v(\"\\\\x0B\")]),\n            _vm._v(\", \"),\n            _c(\"code\", [_vm._v(\"\\\\f\")]),\n            _vm._v(\", \"),\n            _c(\"code\", [_vm._v(\"\\\\r\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\S\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"任意一个非空格类字符\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\w\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"除\"),\n            _c(\"code\", [_vm._v(\"$\")]),\n            _vm._v(\n              \"外的可用于标识符的字符（字母(a-zA-Z)、数字(0-9)、下划线(_)）\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\W\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"任意一个不能用于标识符的字符\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"^\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"串开头\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"$\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"串结尾\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"|\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"或\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"+\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"出现1次或多次\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"?\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"出现0次或1次\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"*\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"出现0次或多次\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"{n}\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"出现n次\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"{n,}\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"出现至少n次\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"{n,m}\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"出现n至m次\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"()\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"捕获组\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"[]\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"单个字符\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\n\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"编号为n的捕获组\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\"这里：{n,m|n,m∈N\"),\n          _c(\"sub\", [_vm._v(\"+\")]),\n          _vm._v(\"}\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"捕获组\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_c(\"p\", [_vm._v(\"起编号作用\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_vm._v(\"从左括号出现的位置开始计算\")])])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_vm._v(\"例如：\"), _c(\"code\", [_vm._v(\"(A((BC(D))E))F)\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"捕获组\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"内容\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\\\\\1\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"A((BC(D))E)\")])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\\\\\2\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"(BC(D))E\")])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\\\\\3\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"BC(D)\")])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\\\\\4\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"D\")])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_c(\"code\", [_vm._v(\"\\\\\\\\5\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"F\")])])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [_c(\"hr\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"包装类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#包装类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 包装类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n            _vm._v(\"基本数据类型\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"th\", { staticStyle: { \"text-align\": \"left\" } }, [\n            _c(\"code\", [_vm._v(\"byte\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"th\", [_c(\"code\", [_vm._v(\"short\")])]),\n          _vm._v(\" \"),\n          _c(\"th\", [_c(\"code\", [_vm._v(\"int\")])]),\n          _vm._v(\" \"),\n          _c(\"th\", [_c(\"code\", [_vm._v(\"long\")])]),\n          _vm._v(\" \"),\n          _c(\"th\", [_c(\"code\", [_vm._v(\"float\")])]),\n          _vm._v(\" \"),\n          _c(\"th\", [_c(\"code\", [_vm._v(\"double\")])]),\n          _vm._v(\" \"),\n          _c(\"th\", [_c(\"code\", [_vm._v(\"char\")])]),\n          _vm._v(\" \"),\n          _c(\"th\", [_c(\"code\", [_vm._v(\"boolean\")])])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n            _vm._v(\"包装类\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", { staticStyle: { \"text-align\": \"left\" } }, [\n            _c(\"code\", [_vm._v(\"Byte\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"Short\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"Integer\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"Long\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"Float\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"Double\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"Character\")])]),\n          _vm._v(\" \"),\n          _c(\"td\", [_c(\"code\", [_vm._v(\"Boolean\")])])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"int\")]),\n        _vm._v(\"和\"),\n        _c(\"code\", [_vm._v(\"char\")]),\n        _vm._v(\"所对应的包装类为单词的全拼。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"装箱\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#装箱\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 装箱\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"将\"),\n      _c(\"strong\", [_vm._v(\"基本数据类型转换为对应的引用数据类型对象\")]),\n      _vm._v(\"的操作。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"将一个\"),\n      _c(\"strong\", [\n        _vm._v(\"基本数据类型变量直接赋值给对应的引用数据类型对象\")\n      ]),\n      _vm._v(\"。本质上调用了对应的\"),\n      _c(\"code\", [_vm._v(\"valueOf()\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Integer\")\n          ]),\n          _vm._v(\" integer \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"3\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Integer\")\n          ]),\n          _vm._v(\" integer \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Integer\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"valueOf\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token number\" } }, [\n            _vm._v(\"3\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"warning custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"注意\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"所有相同类型地包装类对象之间值的比较，应当全部使用equals()。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在值范围在 -128 到 127内的赋值，Integer对象会在IntegerCache.cache中产生，会服用已有对象。此时使用==比较是安全的。\"\n        ),\n        _c(\"br\"),\n        _vm._v(\"\\n但在范围之外的所有数据会在堆中产生，不会复用已有对象。\"),\n        _c(\"br\"),\n        _vm._v(\"\\n故推荐全部使用equals()来规避风险。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\n        \"将一个引用数据类型对象直接赋值给对应基本数据类型变量。本质上调用了对象的\"\n      ),\n      _c(\"code\", [_vm._v(\"xxxValue()\")]),\n      _vm._v(\"。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"int\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" integer\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-java extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-java\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"int\")\n          ]),\n          _vm._v(\" i \"),\n          _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n            _vm._v(\"=\")\n          ]),\n          _vm._v(\" integer\"),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\".\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n            _vm._v(\"intValue\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\"(\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\")\")\n          ]),\n          _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n            _vm._v(\";\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"关于哈希码\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\"整数的哈希码是其本身，但小数的哈希码需要经过计算才能得到。\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"字符的哈希码是其对应的编码。\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\"布尔类型的哈希码为特殊值，如\"),\n            _c(\"code\", [_vm._v(\"true\")]),\n            _vm._v(\"的哈希码为\"),\n            _c(\"code\", [_vm._v(\"1231\")]),\n            _vm._v(\"；\"),\n            _c(\"code\", [_vm._v(\"false\")]),\n            _vm._v(\"为\"),\n            _c(\"code\", [_vm._v(\"1237\")]),\n            _vm._v(\"。\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"八种基本数据类型的哈希码都为固定值。\")])])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [_c(\"hr\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"math类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#math类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Math\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"Math\")]),\n      _vm._v(\"类是一个最终类，其构造函数是私有的。\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"strictfp关键字\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#strictfp关键字\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"strictfp\")]),\n      _vm._v(\"关键字\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"tip custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"特别的\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"当适用精确运算时，Java 提供了\"),\n        _c(\"code\", [_vm._v(\"BigDecimal\")]),\n        _vm._v(\"类。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"这个类中对基础运算（如加、减、乘、除）提供了方法支持，故，不能使用运算符（如\"\n        ),\n        _c(\"code\", [_vm._v(\"+\")]),\n        _vm._v(\"、\"),\n        _c(\"code\", [_vm._v(\"-\")]),\n        _vm._v(\"、\"),\n        _c(\"code\", [_vm._v(\"*\")]),\n        _vm._v(\"、\"),\n        _c(\"code\", [_vm._v(\"/\")]),\n        _vm._v(\"）来进行运算。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [_c(\"hr\")])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"枚举\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#枚举\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 枚举\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"工具类库-package-java-util\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#工具类库-package-java-util\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 工具类库 (Package \"),\n      _c(\"code\", [_vm._v(\"java.util\")]),\n      _vm._v(\")\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"date类-calendar类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#date类-calendar类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Date\")]),\n      _vm._v(\"类, \"),\n      _c(\"code\", [_vm._v(\"Calendar\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"juc-package-java-util-concurrent\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#juc-package-java-util-concurrent\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" JUC (Package \"),\n      _c(\"code\", [_vm._v(\"java.util.concurrent\")]),\n      _vm._v(\")\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"集合\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#集合\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 集合\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"iterator接口\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#iterator接口\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Iterator\")]),\n      _vm._v(\"接口\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"collections类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#collections类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Collections\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"map接口\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#map接口\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Map\")]),\n      _vm._v(\"接口\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"properties类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#properties类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Properties\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"scanner类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#scanner类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Scanner\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"输入-输出类库-package-java-io\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: {\n            href: \"#输入-输出类库-package-java-io\",\n            \"aria-hidden\": \"true\"\n          }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 输入/输出类库 (Package \"),\n      _c(\"code\", [_vm._v(\"java.io\")]),\n      _vm._v(\")\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"file类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#file类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"File\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"i-o-stream\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#i-o-stream\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" I/O Stream\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"网络类库-package-java-net\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#网络类库-package-java-net\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 网络类库 (Package \"),\n      _c(\"code\", [_vm._v(\"java.net\")]),\n      _vm._v(\")\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"socket类\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#socket类\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"code\", [_vm._v(\"Socket\")]),\n      _vm._v(\"类\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"其他特性\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#其他特性\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 其他特性\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"断言\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#断言\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 断言\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"泛型-参数化类型\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#泛型-参数化类型\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 泛型, 参数化类型\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}