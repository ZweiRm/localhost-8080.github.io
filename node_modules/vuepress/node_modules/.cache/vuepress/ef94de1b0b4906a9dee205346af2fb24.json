{"remainingRequest":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\vuepress\\lib\\default-theme\\SWUpdatePopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\vuepress\\lib\\default-theme\\SWUpdatePopup.vue","mtime":1558414126042},{"path":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546868327989},{"path":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\babel-loader\\lib\\index.js","mtime":1546868327989},{"path":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546868327989},{"path":"C:\\Users\\momg\\Documents\\WORKSPACE\\Github\\localhost-8080.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1558414119184}],"contextDependencies":[],"result":["import _typeof from \"C:\\\\Users\\\\momg\\\\Documents\\\\WORKSPACE\\\\Github\\\\localhost-8080.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/typeof\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    updateEvent: {\n      type: Object,\n      default: null\n    }\n  },\n  computed: {\n    popupConfig: function popupConfig() {\n      var _arr = [this.$themeLocaleConfig, this.$site.themeConfig];\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var config = _arr[_i];\n        var sw = config.serviceWorker;\n\n        if (sw && sw.updatePopup) {\n          return _typeof(sw.updatePopup) === 'object' ? sw.updatePopup : {};\n        }\n      }\n\n      return null;\n    },\n    enabled: function enabled() {\n      return Boolean(this.popupConfig && this.updateEvent);\n    },\n    message: function message() {\n      var c = this.popupConfig;\n      return c && c.message || 'New content is available.';\n    },\n    buttonText: function buttonText() {\n      var c = this.popupConfig;\n      return c && c.buttonText || 'Refresh';\n    }\n  },\n  methods: {\n    reload: function reload() {\n      if (this.updateEvent) {\n        this.updateEvent.skipWaiting().then(function () {\n          location.reload(true);\n        });\n        this.updateEvent = null;\n      }\n    }\n  }\n};",{"version":3,"sources":["SWUpdatePopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,eAAA;AACA,SAAA;AACA,iBAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AADA,GADA;AAQA,YAAA;AACA,eADA,yBACA;AAAA,iBACA,CAAA,KAAA,kBAAA,EAAA,KAAA,KAAA,CAAA,WAAA,CADA;;AACA,+CAAA;AAAA,YAAA,iBAAA;AACA,YAAA,KAAA,OAAA,aAAA;;AACA,YAAA,MAAA,GAAA,WAAA,EAAA;AACA,iBAAA,QAAA,GAAA,WAAA,MAAA,QAAA,GAAA,GAAA,WAAA,GAAA,EAAA;AACA;AACA;;AACA,aAAA,IAAA;AACA,KATA;AAWA,WAXA,qBAWA;AACA,aAAA,QAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA;AACA,KAbA;AAeA,WAfA,qBAeA;AACA,UAAA,IAAA,KAAA,WAAA;AACA,aAAA,KAAA,EAAA,OAAA,IAAA,2BAAA;AACA,KAlBA;AAoBA,cApBA,wBAoBA;AACA,UAAA,IAAA,KAAA,WAAA;AACA,aAAA,KAAA,EAAA,UAAA,IAAA,SAAA;AACA;AAvBA,GARA;AAkCA,WAAA;AACA,UADA,oBACA;AACA,UAAA,KAAA,WAAA,EAAA;AACA,aAAA,WAAA,CAAA,WAAA,GAAA,IAAA,CAAA,YAAA;AACA,mBAAA,MAAA,CAAA,IAAA;AACA,SAFA;AAGA,aAAA,WAAA,GAAA,IAAA;AACA;AACA;AARA;AAlCA,CAAA","sourcesContent":["<template>\n  <transition name=\"sw-update-popup\">\n    <div\n      v-if=\"enabled\"\n      class=\"sw-update-popup\"\n    >\n      {{message}}<br>\n      <button @click=\"reload\">{{buttonText}}</button>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  props: {\n    updateEvent: {\n      type: Object,\n      default: null\n    }\n  },\n\n  computed: {\n    popupConfig () {\n      for (const config of [this.$themeLocaleConfig, this.$site.themeConfig]) {\n        const sw = config.serviceWorker\n        if (sw && sw.updatePopup) {\n          return typeof sw.updatePopup === 'object' ? sw.updatePopup : {}\n        }\n      }\n      return null\n    },\n\n    enabled () {\n      return Boolean(this.popupConfig && this.updateEvent)\n    },\n\n    message () {\n      const c = this.popupConfig\n      return (c && c.message) || 'New content is available.'\n    },\n\n    buttonText () {\n      const c = this.popupConfig\n      return (c && c.buttonText) || 'Refresh'\n    }\n  },\n\n  methods: {\n    reload () {\n      if (this.updateEvent) {\n        this.updateEvent.skipWaiting().then(() => {\n          location.reload(true)\n        })\n        this.updateEvent = null\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@import './styles/config.styl'\n\n.sw-update-popup\n  position fixed\n  right 1em\n  bottom 1em\n  padding 1em\n  border 1px solid $accentColor\n  border-radius 3px\n  background #fff\n  box-shadow 0 4px 16px rgba(0, 0, 0, 0.5)\n  text-align center\n\n  button\n    margin-top 0.5em\n    padding 0.25em 2em\n\n.sw-update-popup-enter-active, .sw-update-popup-leave-active\n  transition opacity 0.3s, transform 0.3s\n\n.sw-update-popup-enter, .sw-update-popup-leave-to\n  opacity 0\n  transform translate(0, 50%) scale(0.5)\n</style>\n"],"sourceRoot":"node_modules/vuepress/lib/default-theme"}]}