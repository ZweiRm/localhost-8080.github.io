import{_ as h,C as p,c as e,o as k,ag as n,j as i,a,G as l}from"./chunks/framework.DPDPlp3K.js";const d="/img/%E8%87%AA%E5%8A%A8%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.png",r="/img/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7.png",m=JSON.parse('{"title":"语法","description":"","frontmatter":{"prev":{"text":"Java","link":"java/index"},"next":{"text":"面向对象","link":"java/object-oriented"}},"headers":[],"relativePath":"java/grammars.md","filePath":"java/grammars.md"}'),E={name:"java/grammars.md"},g={class:"tip custom-block"},o={class:"custom-block-title"},c={class:"tip custom-block"},y={class:"custom-block-title"};function u(F,s,b,v,C,A){const t=p("Badge");return k(),e("div",null,[s[40]||(s[40]=n("",35)),i("div",g,[i("p",o,[s[0]||(s[0]=a("局部变量类型推断")),l(t,{text:"Java 10+"})]),s[10]||(s[10]=n("",9)),i("ul",null,[s[9]||(s[9]=n("",3)),i("li",null,[s[1]||(s[1]=a("不能用于 Lambda 表达式")),s[2]||(s[2]=i("br",null,null,-1)),s[3]||(s[3]=a(" // ")),s[4]||(s[4]=i("code",null,"var x = () -> {}",-1)),s[5]||(s[5]=i("br",null,null,-1)),s[6]||(s[6]=a(" 但 ")),s[7]||(s[7]=i("code",null,"var",-1)),s[8]||(s[8]=a(" 关键字可以使用在 Lambda 表达式的参数中")),l(t,{text:"Java 11+"})])]),s[11]||(s[11]=n("",4))]),s[41]||(s[41]=i("h3",{id:"_2-2-3-进制",tabindex:"-1"},[a("2.2.3 进制 "),i("a",{class:"header-anchor",href:"#_2-2-3-进制","aria-label":'Permalink to "2.2.3 进制"'},"​")],-1)),i("ul",null,[s[21]||(s[21]=i("li",null,[i("p",null,"十进制：0 ~ 9，满十进一，数字在代码中默认十进制")],-1)),i("li",null,[i("p",null,[s[12]||(s[12]=a("二进制")),l(t,{text:"Java SE 7.0 +"}),s[13]||(s[13]=a("：0 ~ 1，满二进一，在程序中标识一个二进制数，以")),s[14]||(s[14]=i("code",null,"0b",-1)),s[15]||(s[15]=a("或")),s[16]||(s[16]=i("code",null,"0B",-1)),s[17]||(s[17]=a("开头。如：")),s[18]||(s[18]=i("code",null,"0b0011",-1)),s[19]||(s[19]=a(" = ")),s[20]||(s[20]=i("code",null,"0B0011",-1))])]),s[22]||(s[22]=n("",2))]),s[42]||(s[42]=n("",3)),i("ul",null,[i("li",null,[s[32]||(s[32]=a("数值型 ")),i("ul",null,[i("li",null,[s[29]||(s[29]=n("",3)),i("blockquote",null,[s[27]||(s[27]=i("p",null,[i("code",null,"int"),a(" 整型"),i("br"),i("strong",null,"长度"),a("：4个字节"),i("br"),i("strong",null,"取值范围"),a("：-2"),i("sup",null,"31"),a(" ~ 2"),i("sup",null,"31"),a("-1 (-2147483648 ~ 2147483647)")],-1)),i("div",c,[i("p",y,[s[23]||(s[23]=a("使用")),s[24]||(s[24]=i("code",null,"_",-1)),s[25]||(s[25]=a("分割大数字")),l(t,{text:"Java SE 7.0 +"})]),s[26]||(s[26]=i("p",null,[a("例如："),i("code",null,"int a = 100_500;")],-1))]),s[28]||(s[28]=i("p",null,[i("strong",null,"默认值"),a(": "),i("code",null,"0")],-1))]),s[30]||(s[30]=n("",1))]),s[31]||(s[31]=n("",1))])]),s[33]||(s[33]=i("li",null,"字符型",-1))]),s[43]||(s[43]=n("",88)),i("ul",null,[s[38]||(s[38]=n("",2)),i("li",null,[i("p",null,[s[34]||(s[34]=a("对")),s[35]||(s[35]=i("code",null,"String",-1)),s[36]||(s[36]=a("类进行判定")),l(t,{text:"Java SE 7.0 +"}),s[37]||(s[37]=a("。"))])]),s[39]||(s[39]=n("",1))]),s[44]||(s[44]=n("",36))])}const B=h(E,[["render",u]]);export{m as __pageData,B as default};
