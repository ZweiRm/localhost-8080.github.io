import{_ as i,c as a,o as e,ag as r}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"Spring","description":"","frontmatter":{"prev":false,"next":{"text":"总览","link":"spring/overall"}},"headers":[],"relativePath":"spring/index.md","filePath":"spring/index.md"}'),n={name:"spring/index.md"};function t(o,l,u,s,p,d){return e(),a("div",null,l[0]||(l[0]=[r('<h1 id="spring" tabindex="-1">Spring <a class="header-anchor" href="#spring" aria-label="Permalink to &quot;Spring&quot;">​</a></h1><p>本分区介绍 Spring 框架的各个细节。</p><h2 id="框架" tabindex="-1">框架 <a class="header-anchor" href="#框架" aria-label="Permalink to &quot;框架&quot;">​</a></h2><ul><li>总览 <ul><li>特性</li><li>版本</li><li>模块化</li><li>技术整合 <ul><li>Java 语言特性</li><li>JDK API</li><li>JavaEE API</li></ul></li><li>模型 <ul><li>OOP <ul><li>契约接口</li></ul></li><li>AOP <ul><li>动态代理</li><li>字节码提升</li></ul></li><li>Metaprogramming <ul><li>配置元信息</li><li>注解</li><li>属性配置</li></ul></li><li>Module Oriented Programming <ul><li>Maven</li><li>Java 9 Automatic Modules</li><li>@Enable</li></ul></li><li>Functional Programming <ul><li>Lambda</li><li>Reactive</li></ul></li></ul></li></ul></li><li>IoC （管理 Bean） <ul><li>关于 IoC</li><li>依赖查找 （IoC 的一种实现）</li><li>依赖注入 （IoC 的一种实现）</li><li>依赖来源</li><li>IoC 容器生命周期</li></ul></li><li>Bean <ul><li>实例 （主要来源于依赖）</li><li>作用域</li><li>生命周期</li></ul></li><li>元信息 （给 Bean 配置数据；控制 IoC 容器） <ul><li>注解</li><li>配置元信息</li><li>外部化属性</li></ul></li><li>基础设施（元信息的工具，IoC 的扩展） <ul><li>资源管理（通过 XML, properties 配置元信息；通过 properties, yaml 配置外部化属性）</li><li>类型转换 （通过对象属性配置元信息；通过配置数据配置外部化属性）</li><li>数据绑定（接收校验的内容）</li><li>校验（接收国际化的文案）</li><li>国际化</li><li>事件（监听泛型事件）</li><li>泛型处理</li></ul></li></ul>',4)]))}const m=i(n,[["render",t]]);export{c as __pageData,m as default};
