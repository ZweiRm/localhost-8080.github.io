import{_ as i,c as p,o as a,ag as r}from"./chunks/framework.DPDPlp3K.js";const o="/img/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%9A%84%E6%9C%AC%E8%B4%A8.jpg",c=JSON.parse('{"title":"软件工程概述","description":"","frontmatter":{},"headers":[],"relativePath":"software-engineering/index.md","filePath":"software-engineering/index.md"}'),t={name:"software-engineering/index.md"};function e(n,l,s,u,h,g){return a(),p("div",null,l[0]||(l[0]=[r('<h1 id="软件工程概述" tabindex="-1">软件工程概述 <a class="header-anchor" href="#软件工程概述" aria-label="Permalink to &quot;软件工程概述&quot;">​</a></h1><p>软件工程学科是在 20 世纪 60 年代后期，由软件工作者们研究消除软件危机的途径时逐渐形成的工程学科。</p><h2 id="_1-1-软件危机" tabindex="-1">1.1 软件危机 <a class="header-anchor" href="#_1-1-软件危机" aria-label="Permalink to &quot;1.1 软件危机&quot;">​</a></h2><h3 id="_1-1-1-背景" tabindex="-1">1.1.1 背景 <a class="header-anchor" href="#_1-1-1-背景" aria-label="Permalink to &quot;1.1.1 背景&quot;">​</a></h3><ul><li><p>计算机系统发展的早期时代 (20 世纪 60 年代中期以前)</p><ul><li><p>小规模程序</p></li><li><p>使用者和编写者是同一个(组)人</p></li></ul></li><li><p>计算机系统发展的第二个时代 (20 世纪 60 年代中期到 70 年代中期)</p><ul><li><p>出现“软件作坊”</p></li><li><p>数量急剧膨胀</p></li><li><p>维护软件时消耗的资源急剧上升：需要修改运行时的错误；需要修改程序以适应新需求、新硬件/操作系统环境</p></li><li><p>个体化特征让许多程序成为不可维护的程序</p></li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">两个主要问题</p><ul><li><p><strong>如何开发</strong>软件，以满足对软件日益增长的需求。</p></li><li><p><strong>如何维护</strong>数量不断膨胀的已有软件。</p></li></ul></div><h3 id="_1-1-2-表现" tabindex="-1">1.1.2 表现 <a class="header-anchor" href="#_1-1-2-表现" aria-label="Permalink to &quot;1.1.2 表现&quot;">​</a></h3><ol><li><p>对软件开发成本和进度估计不准确</p></li><li><p>用户对“已经完成”的软件系统不满意</p></li><li><p>软件产品的质量靠不住</p></li><li><p>软件常常不可维护</p></li><li><p>软件没有适当的文档资料</p></li><li><p>软件成本在计算机系统总成本中所占比例逐年上升</p></li><li><p>软件开发生产率提升的速度，跟不上计算机应用迅速普及深入的趋势</p></li></ol><h3 id="_1-1-3-原因" tabindex="-1">1.1.3 原因 <a class="header-anchor" href="#_1-1-3-原因" aria-label="Permalink to &quot;1.1.3 原因&quot;">​</a></h3><ul><li><p>软件本身特点（客观）</p><ol><li><p>软件缺乏“可见性”</p><ul><li><p>开发过程进展难以衡量，质量较难评价</p></li><li><p>管理和控制软件开发过程困难</p></li></ul></li><li><p>软件规模庞大</p><ul><li><p>为在预定时间开发规模庞大的软件，需要多人合作，难以保证质量</p></li><li><p>急需严格而科学的管理</p></li></ul></li></ol></li><li><p>开发维护方法不正确（主观）</p><ol><li><p>忽视软件需求分析的重要性</p><ul><li><p>不同阶段对软件修改需要付出的代价是不同的</p></li><li><p>没有做好准确的前期准备会造成生产出的“已完成”的软件完全不符合用户需求</p></li></ul></li><li><p>只重视程序而忽略软件配置其余成分</p><ul><li><p>编写程序的工作量只有 10% ~ 20%</p></li><li><p>一个软件完整的配置包括程序、文档和数据等成分</p></li></ul></li><li><p>轻视软件维护</p><ul><li><p>软件寿命很长时需要改正使用中发现的每一个前在错误，也要适应环境变化（硬件、操作系统更新换代）</p></li><li><p>维护占软件总费用的 55% ~ 70%</p></li></ul></li><li><p>软件开发技术落后、生产方式落后、开发工具落后，生产效率提高缓慢、软件开发费用不断增加</p></li></ol></li></ul><h3 id="_1-1-4-消除途径" tabindex="-1">1.1.4 消除途径 <a class="header-anchor" href="#_1-1-4-消除途径" aria-label="Permalink to &quot;1.1.4 消除途径&quot;">​</a></h3><ul><li><p>技术措施</p><ol><li><p>认识到<strong>软件是程序、数据和相关文档的完整集合</strong></p><ul><li><p><strong>程序</strong>是能够完成预定功能和性能的可执行的指令序列</p></li><li><p><strong>数据</strong>是使程序能够适当地处理信息的数据结构</p></li><li><p><strong>文档</strong>是开发、使用和维护程序所需要的图文资料</p></li></ul></li><li><p>开发和使用更好的软件工具<br> 使用适当的软件工具来辅助开发人员，让他们从繁重重复的工作中解脱出来</p></li></ol></li><li><p>组织管理措施</p><ol><li><p>积极借鉴各种工程项目中积累的行之有效的管理方法<br> 软件开发不是个体劳动，需要组织良好、管理严密、各类人员协同配合的工程项目</p></li><li><p>推广使用在实践中总结出来的软件开发的成功的技术和方法</p></li><li><p>尽快消除计算机系统早起发展形成的错误概念和做法</p></li></ol></li></ul><h2 id="_1-2-软件的本质" tabindex="-1">1.2 软件的本质 <a class="header-anchor" href="#_1-2-软件的本质" aria-label="Permalink to &quot;1.2 软件的本质&quot;">​</a></h2><h3 id="_1-2-1-定义" tabindex="-1">1.2.1 定义 <a class="header-anchor" href="#_1-2-1-定义" aria-label="Permalink to &quot;1.2.1 定义&quot;">​</a></h3><p>软件是：(1)指令的集合(程序); (2)数据结构; (3)软件描述信息(文档)</p><h3 id="_1-2-2-特点" tabindex="-1">1.2.2 特点 <a class="header-anchor" href="#_1-2-2-特点" aria-label="Permalink to &quot;1.2.2 特点&quot;">​</a></h3><ul><li>软件<strong>是无形的、不可见的逻辑实体</strong></li><li>软件<strong>是设计、定制开发的</strong>，不是生成制造的</li><li>软件在<strong>使用过程中没有磨损、老化</strong>的问题</li><li>软件是<strong>复杂且经常变化的</strong>的</li><li>软件的<strong>开发成本高</strong></li><li>软件<strong>易于复制</strong></li><li>软件<strong>质量要求较高</strong></li><li>软件<strong>对硬件和环境有不同程度的依赖性</strong></li></ul><h3 id="_1-2-3-分类" tabindex="-1">1.2.3 分类 <a class="header-anchor" href="#_1-2-3-分类" aria-label="Permalink to &quot;1.2.3 分类&quot;">​</a></h3><p><strong>按照功能划分，可分为三类：</strong></p><ul><li><p>系统软件</p><ul><li><p>最靠近硬件</p></li><li><p>其他软件一般都通过系统软件发挥作用</p></li><li><p>编译程序处理复杂但确定的信息结构，把高级语言编写的程序转换为可执行的，等价的低级语言程序</p></li><li><p>操作系统、驱动程序等处理不确定的数据，负责管理系统的各种资源，控制程序执行</p></li></ul></li><li><p>支撑软件</p><ul><li><p>支撑软件的开发、维护和运行</p></li><li><p>中间价是现代支撑软件的代表</p></li><li><p>软件开发环境，如：环境数据库、接口软件、工具组</p></li></ul></li><li><p>应用软件</p><ul><li>特定领域专用的软件</li></ul></li></ul><p><strong>按照应用领域，可分为七类：</strong></p><ul><li><p>系统软件</p></li><li><p>应用软件</p></li><li><p>工程/科学软件</p></li><li><p>嵌入式软件</p></li><li><p>产品线软件</p><ul><li><p>为多个不同用户的使用提供特定功能</p></li><li><p>关注有限的、内部的市场/大众消费品市场</p></li></ul></li><li><p>Web /移动 App</p><ul><li><p>以网络为中心</p></li><li><p>安装在移动设备上</p></li></ul></li><li><p>人工智能软件</p><ul><li>利用非数值算法解决计算和直接分析无法解决的复杂问题</li></ul></li></ul><h2 id="_1-3-软件工程" tabindex="-1">1.3 软件工程 <a class="header-anchor" href="#_1-3-软件工程" aria-label="Permalink to &quot;1.3 软件工程&quot;">​</a></h2><h3 id="_1-3-1-定义" tabindex="-1">1.3.1 定义 <a class="header-anchor" href="#_1-3-1-定义" aria-label="Permalink to &quot;1.3.1 定义&quot;">​</a></h3><p><code>[IEE93a]</code>软件工程是：(1)将系统化的、规范的、可量化的方法应用于软件的开发、运行和维护，即将工程化的方法应用于软件; (2)对(1)中所述的方法的研究。</p><p>通俗来说：软件工程指导计算机软件开发和维护。采用工程概念、原理、技术和方法来开发和维护软件。将经过证明有效的管理技术、最好的技术方法结合运用起来，经济地开发出高质量的软件并进行维护。</p><h3 id="_1-3-2-特点" tabindex="-1">1.3.2 特点 <a class="header-anchor" href="#_1-3-2-特点" aria-label="Permalink to &quot;1.3.2 特点&quot;">​</a></h3><ul><li><p>软件工程<strong>关注于大型程序的构造</strong></p></li><li><p>软件工程的<strong>中心课题是控制复杂性</strong></p></li><li><p>开发软件的<strong>效率</strong>非常重要</p></li><li><p>开发的软件必须<strong>有效地支持它的用户</strong></p></li><li><p>软件工程领域通常是由具有一种文化背景的人替具有另一种文化背景的人创造产品</p></li></ul><h3 id="_1-3-3-目标" tabindex="-1">1.3.3 目标 <a class="header-anchor" href="#_1-3-3-目标" aria-label="Permalink to &quot;1.3.3 目标&quot;">​</a></h3><ul><li><p>降低软件<strong>开发成本</strong></p></li><li><p>满足用户要求的全部<strong>软件功能</strong></p></li><li><p>符合用户要求，令用户满意的<strong>软件性能</strong></p></li><li><p>具有较好的<strong>易用性</strong>、<strong>可重用性</strong>和<strong>可移植性</strong></p></li><li><p>较低的<strong>维护成本</strong>，较高的<strong>可靠性</strong></p></li><li><p>按合同要求完成开发任务，<strong>及时</strong>交付用户使用</p></li></ul><h3 id="_1-3-4-研究内容" tabindex="-1">1.3.4 研究内容 <a class="header-anchor" href="#_1-3-4-研究内容" aria-label="Permalink to &quot;1.3.4 研究内容&quot;">​</a></h3><ul><li><p>软件开发技术</p><ul><li><p>软件开发方法</p></li><li><p>软件开发过程</p></li><li><p>软件开发工具和技术</p></li></ul></li><li><p>软件开发过程管理</p><ul><li><p>软件工程经济学</p></li><li><p>软件管理学</p></li></ul></li></ul><h3 id="_1-3-5-基本原理" tabindex="-1">1.3.5 基本原理 <a class="header-anchor" href="#_1-3-5-基本原理" aria-label="Permalink to &quot;1.3.5 基本原理&quot;">​</a></h3><ul><li><p>用分阶段的生存周期计划严格管理</p></li><li><p>坚持进行阶段评审</p></li></ul><p>+实行严格的产品控制</p><ul><li><p>采用现代程序设计技术</p></li><li><p>结果应该能清楚地审查</p></li><li><p>开发小组人员应该少而精</p></li><li><p>承认不断改进软件工程实践的必要性</p></li></ul><h3 id="_1-3-6-软件开发" tabindex="-1">1.3.6 软件开发 <a class="header-anchor" href="#_1-3-6-软件开发" aria-label="Permalink to &quot;1.3.6 软件开发&quot;">​</a></h3><ul><li><p>软件开发是实现<strong>问题域中的概念和处理逻辑</strong>到<strong>运行平台的概念和处理逻辑</strong>的<strong>映射</strong>。</p></li><li><p>本质是<strong>问题域到不同抽象层之间概念和计算逻辑的映射</strong>。</p></li></ul><p><img src="'+o+'" alt="软件开发的本质"></p><h3 id="_1-3-7-建模" tabindex="-1">1.3.7 建模 <a class="header-anchor" href="#_1-3-7-建模" aria-label="Permalink to &quot;1.3.7 建模&quot;">​</a></h3><ul><li><p>建模是实现映射的基本手段。解决问题时，运用知识，通过抽象，给出问题的一个结构就是建模。</p></li><li><p>模型指在特定意图下所确定的角度和抽象层次上对物理系统的描述。通常包括系统的边界描述，给出系统内各模块元素以及其之间的语义关系。</p></li><li><p>软件开发中，软件系统模型分为两类：概念模型和软件模型。</p></li></ul>',41)]))}const _=i(t,[["render",e]]);export{c as __pageData,_ as default};
