(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{175:function(a,t,e){"use strict";e.r(t);var v=e(0),r=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"应用程序编程接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用程序编程接口","aria-hidden":"true"}},[a._v("#")]),a._v(" 应用程序编程接口")]),a._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),e("p",[a._v("应用程序编程接口 (Application Programming Interface, "),e("strong",[a._v("API")]),a._v(") 是预先定义的一套代码，用于程序员直接调用来实现其具体需求。")]),a._v(" "),e("h2",{attrs:{id:"语言基础类库-package-java-lang"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语言基础类库-package-java-lang","aria-hidden":"true"}},[a._v("#")]),a._v(" 语言基础类库 (Package "),e("code",[a._v("java.lang")]),a._v(")")]),a._v(" "),e("h3",{attrs:{id:"object类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Object")]),a._v("类")]),a._v(" "),e("h4",{attrs:{id:"基本信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本信息","aria-hidden":"true"}},[a._v("#")]),a._v(" 基本信息")]),a._v(" "),e("p",[e("strong",[a._v("Package")]),a._v(" java.lang"),e("br"),a._v(" "),e("code",[a._v("public class Object")])]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("Object")]),a._v("类是所有类的父类。在 Java 中处于顶级父类的地位，是类层级结构的根类。")])]),a._v(" "),e("li",[e("p",[a._v("任何类对象都可以用"),e("code",[a._v("Object")]),a._v("类的对象来接收。")])])]),a._v(" "),e("h4",{attrs:{id:"重要方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重要方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 重要方法")]),a._v(" "),e("ol",[e("li",[e("p",[e("code",[a._v("clone()")])]),a._v(" "),e("ul",[e("li",[e("p",[a._v("克隆一个对象。")])]),a._v(" "),e("li",[e("p",[a._v("当一个对象要被克隆时，"),e("strong",[a._v("它所对应的类必须实现"),e("code",[a._v("Cloneable")]),a._v("接口")]),a._v("。")])]),a._v(" "),e("li",[e("p",[a._v("克隆完成后会产生一个新的对象。"),e("strong",[a._v("新对象和原对象的地址不同，但属性值相同")]),a._v("。")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("Cloneable")]),a._v("接口"),e("br"),a._v("\n其中没有任何属性和方法，仅用于标识此类产生的对象可以被克隆。")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("finalize()")])]),a._v(" "),e("ul",[e("li",[e("p",[a._v("通知"),e("code",[a._v("GC")]),a._v("回收当前对象。")])]),a._v(" "),e("li",[e("p",[a._v("即使"),e("code",[a._v("GC")]),a._v("已经开始运行，也只回收当前对象而不回收其他对象。")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("System.gc()")]),a._v("通知"),e("code",[a._v("GC")]),a._v("回收所有可以回收的对象。")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("getClass()")]),e("br"),a._v("\n获取对象的运行时类对象（如，后续可用于反射）。")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("hashCode()")]),e("br"),a._v("\n获取该对象的哈希码值，在一定范围内可以认为是唯一的。哈希码为一串 32 位的二进制数据。")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("toString()")]),e("br"),a._v("\n打印对象。实际调用对象本身的"),e("code",[a._v("toString()")]),a._v("。")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("equals(Object obj)")]),e("br"),a._v("\n比较两个对象是否相等。默认比较对象的地址，但对于"),e("code",[a._v("File")]),a._v("，"),e("code",[a._v("String")]),a._v("，"),e("code",[a._v("Date")]),a._v("和包装类来说，它们比较地是对象值。")]),a._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[a._v("特别地")]),a._v(" "),e("p",[a._v("当手动重写"),e("code",[a._v("equals()")]),a._v("时，思路为:")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("判断地址是否一致("),e("code",[a._v("if (this == obj)")]),a._v(")")])]),a._v(" "),e("li",[e("p",[a._v("判断参数是否为空("),e("code",[a._v("if (obj == null)")]),a._v(")")])]),a._v(" "),e("li",[e("p",[a._v("判断类型是否一致("),e("code",[a._v("if (this.getClass() != obj.getClass())")]),a._v(")")])]),a._v(" "),e("li",[e("p",[a._v("判断属性值是否一致")])])])])])]),a._v(" "),e("h3",{attrs:{id:"string类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("String")]),a._v("类")]),a._v(" "),e("h4",{attrs:{id:"基本信息-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 基本信息")]),a._v(" "),e("p",[e("strong",[a._v("Package")]),a._v(" java.lang"),e("br"),a._v(" "),e("code",[a._v("public final class String")])]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("String")]),a._v("类是一个最终类，表示字符串。")])]),a._v(" "),e("li",[e("p",[a._v("所有字符串都是"),e("code",[a._v("String")]),a._v("类的实例。")])]),a._v(" "),e("li",[e("p",[a._v("字符串是常量，创建后不可更改，但可以被共享。")])])]),a._v(" "),e("h4",{attrs:{id:"重要方法-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重要方法-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 重要方法")]),a._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[a._v("特别地")]),a._v(" "),e("ul",[e("li",[e("p",[a._v('拼接字符串可以使用运算符"'),e("code",[a._v("+")]),a._v('"，本质上 Java 编译器会调用'),e("code",[a._v("StringBuffer")]),a._v("（或类似技术）来实现这个拼接操作。")])]),a._v(" "),e("li",[e("p",[a._v("拼接多个字符串建议使用"),e("code",[a._v("StringBuilder")]),a._v("类，少量字符串使用"),e("code",[a._v("+")]),a._v("运算符")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("StringBuilder")]),a._v("和"),e("code",[a._v("StringBuffer")]),a._v("使用方法完全一致")]),a._v(" "),e("ul",[e("li",[e("p",[e("code",[a._v("StringBuilder")]),a._v("线程不安全")])]),a._v(" "),e("li",[e("p",[e("code",[a._v("StringBuffer")]),a._v("线程安全")])])])])])]),a._v(" "),e("h3",{attrs:{id:"pattern类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pattern类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Pattern")]),a._v("类")]),a._v(" "),e("h3",{attrs:{id:"包装类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#包装类","aria-hidden":"true"}},[a._v("#")]),a._v(" 包装类")]),a._v(" "),e("ul",[e("li",[a._v("自动装箱"),e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[a._v("注意")]),a._v(" "),e("p",[a._v("所有相同类型地包装类对象之间值的比较，应当全部使用"),e("code",[a._v("equals()")]),a._v("。")]),a._v(" "),e("p",[a._v("在值范围在 -128 到 127内的赋值，"),e("code",[a._v("Integer")]),a._v("对象会在"),e("code",[a._v("IntegerCache.cache")]),a._v("中产生，会服用已有对象。此时使用"),e("code",[a._v("==")]),a._v("比较是安全的。"),e("br"),a._v("\n但在范围之外的所有数据会在堆中产生，不会复用已有对象。"),e("br"),a._v("\n故推荐全部使用"),e("code",[a._v("equals()")]),a._v("来规避风险。")])])])]),a._v(" "),e("h3",{attrs:{id:"math类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#math类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Math")]),a._v("类")]),a._v(" "),e("h3",{attrs:{id:"异常"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异常","aria-hidden":"true"}},[a._v("#")]),a._v(" 异常")]),a._v(" "),e("h3",{attrs:{id:"枚举"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#枚举","aria-hidden":"true"}},[a._v("#")]),a._v(" 枚举")]),a._v(" "),e("h3",{attrs:{id:"线程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#线程","aria-hidden":"true"}},[a._v("#")]),a._v(" 线程")]),a._v(" "),e("h2",{attrs:{id:"工具类库-package-java-util"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工具类库-package-java-util","aria-hidden":"true"}},[a._v("#")]),a._v(" 工具类库 (Package "),e("code",[a._v("java.util")]),a._v(")")]),a._v(" "),e("h3",{attrs:{id:"date类-calendar类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#date类-calendar类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Date")]),a._v("类, "),e("code",[a._v("Calendar")]),a._v("类")]),a._v(" "),e("h3",{attrs:{id:"juc-package-java-util-concurrent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#juc-package-java-util-concurrent","aria-hidden":"true"}},[a._v("#")]),a._v(" JUC (Package "),e("code",[a._v("java.util.concurrent")]),a._v(")")]),a._v(" "),e("h3",{attrs:{id:"集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合","aria-hidden":"true"}},[a._v("#")]),a._v(" 集合")]),a._v(" "),e("h3",{attrs:{id:"iterator接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iterator接口","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Iterator")]),a._v("接口")]),a._v(" "),e("h3",{attrs:{id:"collections类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collections类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Collections")]),a._v("类")]),a._v(" "),e("h3",{attrs:{id:"map接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map接口","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Map")]),a._v("接口")]),a._v(" "),e("h3",{attrs:{id:"properties类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Properties")]),a._v("类")]),a._v(" "),e("h2",{attrs:{id:"输入-输出类库-package-java-io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入-输出类库-package-java-io","aria-hidden":"true"}},[a._v("#")]),a._v(" 输入/输出类库 (Package "),e("code",[a._v("java.io")]),a._v(")")]),a._v(" "),e("h3",{attrs:{id:"file类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("File")]),a._v("类")]),a._v(" "),e("h3",{attrs:{id:"i-o-stream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-o-stream","aria-hidden":"true"}},[a._v("#")]),a._v(" I/O Stream")]),a._v(" "),e("h2",{attrs:{id:"网络类库-package-java-net"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络类库-package-java-net","aria-hidden":"true"}},[a._v("#")]),a._v(" 网络类库 (Package "),e("code",[a._v("java.net")]),a._v(")")]),a._v(" "),e("h3",{attrs:{id:"socket类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#socket类","aria-hidden":"true"}},[a._v("#")]),a._v(" "),e("code",[a._v("Socket")]),a._v("类")]),a._v(" "),e("h2",{attrs:{id:"其他特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他特性","aria-hidden":"true"}},[a._v("#")]),a._v(" 其他特性")]),a._v(" "),e("h3",{attrs:{id:"断言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#断言","aria-hidden":"true"}},[a._v("#")]),a._v(" 断言")]),a._v(" "),e("h3",{attrs:{id:"泛型-参数化类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#泛型-参数化类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 泛型, 参数化类型")])])}],!1,null,null,null);r.options.__file="应用程序编程接口.md";t.default=r.exports}}]);