(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{172:function(a,v,t){"use strict";t.r(v);var s=t(0),_=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,v=a.$createElement,t=a._self._c||v;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础","aria-hidden":"true"}},[a._v("#")]),a._v(" 基础")]),a._v(" "),t("h2",{attrs:{id:"关于-java"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于-java","aria-hidden":"true"}},[a._v("#")]),a._v(" 关于 Java")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("1995 年 Sun 公司正式推出的一款编程语言"),t("br"),a._v("\n吸收了 C++ 的优点，去掉了其中难以理解的部分")])]),a._v(" "),t("li",[t("p",[a._v("起初它的名字为 Oak"),t("br"),a._v("\nGreen Project 引导下开发了 Oak 语言，并在实用机器运行"),t("br"),a._v('\nSunWorld 大会正式以"Java"的名字发布了 1.0 版本'),t("br"),a._v('\n提出了 Java 的口号 "Write once, run anywhere."')])]),a._v(" "),t("li",[t("p",[a._v("版本变化")]),a._v(" "),t("ul",[t("li",[a._v("Beta [1995, "),t("strong",[a._v("JDK Beta")]),a._v("]")]),a._v(" "),t("li",[a._v("1.0 [1996, "),t("strong",[a._v("JDK 1.0")]),a._v("] (JVM, Applet, AWT...)")]),a._v(" "),t("li",[a._v("1.1 [1997, "),t("strong",[a._v("JDK 1.1")]),a._v("] (JDBC, JavaBean, 内部类...)")]),a._v(" "),t("li",[a._v("1.2 [1998, "),t("strong",[a._v("J2SE 1.2")]),a._v(", ...] (分解为 J2SE, J2EE, J2ME)")]),a._v(" "),t("li",[a._v("1.3 [2000, "),t("strong",[a._v("J2SE 1.3")]),a._v(", ...] (数学运算, Timer, ...)")]),a._v(" "),t("li",[a._v("1.4 [2002, "),t("strong",[a._v("J2SE 1.4")]),a._v(", ...] (正则, 日志, XML解析器, ...) 走向成熟")]),a._v(" "),t("li",[a._v("5.0 [2004, "),t("strong",[a._v("J2SE 5.0")]),a._v(", ...] (泛型, 自动装箱, 枚举, 便利循环, ...) 面向易用")]),a._v(" "),t("li",[a._v("6.0 [2006, "),t("strong",[a._v("Java SE 6.0")]),a._v(", ...] (动态语言, 垃圾回收, 类加载, ...)")]),a._v(" "),t("li",[a._v("Sun 衰落，被 Oracle 收购")]),a._v(" "),t("li",[a._v("7.0 [2011, "),t("strong",[a._v("Java SE 7.0")]),a._v(", ...] (G1 收集器, 类加载框架, ...)")]),a._v(" "),t("li",[a._v("8.0 [2014, "),t("strong",[a._v("Java SE 8.0(LTS)")]),a._v(", ...] (Lambda 表达式, 默认方法, ...)")]),a._v(" "),t("li",[a._v("9.0 [2017, "),t("strong",[a._v("Java SE 9.0")]),a._v(", ...] (模块系统, REPL 交互式编程, ...)")]),a._v(" "),t("li",[a._v("10.0 [2018, "),t("strong",[a._v("Java SE 10.0")]),a._v(", ...] (局部类型推测, 改进的 GC, ...)")]),a._v(" "),t("li",[a._v("11.0 [2018, "),t("strong",[a._v("Java SE 11.0(LTS)")]),a._v(", ...] (基于嵌套的访问控制, 标准 Http 客户端, ...)")])])]),a._v(" "),t("li",[t("p",[a._v("技术结构")]),a._v(" "),t("ul",[t("li",[a._v("Java SE: 标准版")]),a._v(" "),t("li",[a._v("Java EE: 企业版")]),a._v(" "),t("li",[a._v("Java ME: 移动版")])])]),a._v(" "),t("li",[t("p",[a._v("跨平台性"),t("br"),a._v("\nJava 是一款拥有跨平台性的语言。这种特性的实现方式是"),t("span",{attrs:{id:"JVM"}}),a._v("JVM(Java Virtual Machine)."),t("br"),a._v("\nJava 针对每种操作系统开发了对应的 Java 虚拟机，Java 程序在编写完成后并不直接在计算机中运行，而是先提交给对应操作系统的 JVM 进行“翻译”。JVM 将 Java 代码“翻译”成当前操作系统可以“读懂”的语言后才运行。"),t("br"),a._v("\n所以 Java 语言的跨平台性得益于 JVM，但 "),t("strong",[a._v("JVM 本身不具有跨平台性")]),a._v("。")])])]),a._v(" "),t("h2",{attrs:{id:"jvm-jre-和-jdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-jre-和-jdk","aria-hidden":"true"}},[a._v("#")]),a._v(" JVM, JRE 和 JDK")]),a._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"#JVM"}},[a._v("JVM (Java Virtual Machine)")]),a._v(", "),t("strong",[a._v("Java 虚拟机")]),a._v("，是 Java 可以跨平台的前提。")])]),a._v(" "),t("li",[t("p",[a._v("JRE (Java Runtime Environment), "),t("strong",[a._v("Java 运行时环境")]),a._v("，包括 JVM、Java 平台核心类和基础 Java 平台库。")])]),a._v(" "),t("li",[t("p",[a._v("JDK (Java Development Kit), "),t("strong",[a._v("Java 开发工具包")]),a._v("，包括 JRE 和一些开发工具.")])])]),a._v(" "),t("h2",{attrs:{id:"第一个-java-程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一个-java-程序","aria-hidden":"true"}},[a._v("#")]),a._v(" 第一个 Java 程序")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Demo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        System"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, world!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[a._v("注意")]),a._v(" "),t("ul",[t("li",[a._v("Java 程序必须写到 "),t("code",[a._v(".java")]),a._v(" 文件中")]),a._v(" "),t("li",[t("code",[a._v(".class")]),a._v(" 文件名对应类名。每一个类在编译后会生成一个对应的 "),t("code",[a._v(".class")]),a._v(" 文件")]),a._v(" "),t("li",[a._v("当一个类用 "),t("code",[a._v("public")]),a._v(" 修饰时，这个类被称为"),t("strong",[a._v("公共类")]),a._v("。公共类要求和 Java 文件名完全一致")])])]),a._v(" "),t("h2",{attrs:{id:"命令行下的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令行下的操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 命令行下的操作")]),a._v(" "),t("p",[a._v("编译当前 Java 文件使用命令"),t("code",[a._v("javac")]),a._v("，完整命令："),t("br"),a._v(" "),t("strong",[a._v("Input")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("javac -d 编译完成后存放路径 要编译的.java文件\n")])])]),t("br"),a._v(" "),t("p",[a._v("存在类依赖时使用"),t("code",[a._v("java -cp")]),a._v("来命令指定依赖路径，完整命令："),t("br"),a._v(" "),t("strong",[a._v("Input")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("java -cp .class文件的存放路径 .class文件的文件名\n")])])]),t("br"),a._v(" "),t("p",[a._v("生成 JavaDoc使用命令"),t("code",[a._v("javadoc -d")]),a._v("，完整命令："),t("br"),a._v(" "),t("strong",[a._v("Input")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("javadoc -d 文档生成路径 编译的.java文件\n")])])])])}],!1,null,null,null);_.options.__file="README.md";v.default=_.exports}}]);