(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{487:function(t,s,a){"use strict";a.r(s);var n=a(16),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"api-语言基础类库-package-java-lang"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-语言基础类库-package-java-lang"}},[t._v("#")]),t._v(" API-语言基础类库 (Package "),a("code",[t._v("java.lang")]),t._v(")")]),t._v(" "),a("h2",{attrs:{id:"object类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object类"}},[t._v("#")]),t._v(" "),a("code",[t._v("Object")]),t._v("类")]),t._v(" "),a("h3",{attrs:{id:"基本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang"),a("br"),t._v(" "),a("code",[t._v("public class Object")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Object")]),t._v("类是所有类的父类。在 Java 中处于顶级父类的地位，是类层级结构的根类。")])]),t._v(" "),a("li",[a("p",[t._v("任何类对象都可以用"),a("code",[t._v("Object")]),t._v("类的对象来接收。")])])]),t._v(" "),a("h3",{attrs:{id:"重要方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重要方法"}},[t._v("#")]),t._v(" 重要方法")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("clone()")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("克隆一个对象。")])]),t._v(" "),a("li",[a("p",[t._v("当一个对象要被克隆时，"),a("strong",[t._v("它所对应的类必须实现"),a("code",[t._v("Cloneable")]),t._v("接口")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("克隆完成后会产生一个新的对象。"),a("strong",[t._v("新对象和原对象的地址不同，但属性值相同")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Cloneable")]),t._v("接口"),a("br"),t._v("\n其中没有任何属性和方法，仅用于标识此类产生的对象可以被克隆。")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("finalize()")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("通知"),a("code",[t._v("GC")]),t._v("回收当前对象。")])]),t._v(" "),a("li",[a("p",[t._v("即使"),a("code",[t._v("GC")]),t._v("已经开始运行，也只回收当前对象而不回收其他对象。")])]),t._v(" "),a("li",[a("p",[a("span",{staticStyle:{color:"#3eaf7c"}},[t._v("* "),a("code",[t._v("System.gc()")]),t._v("通知"),a("code",[t._v("GC")]),t._v("回收所有可以回收的对象。→"),a("a",{attrs:{href:"#_4-2-2-system%E7%B1%BB"}},[a("code",[t._v("System")]),t._v("类")])])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getClass()")]),a("br"),t._v("\n获取对象的运行时类对象（如，后续可用于反射）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("hashCode()")]),a("br"),t._v("\n获取该对象的哈希码值，在一定范围内可以认为是唯一的。哈希码为一串 32 位的二进制数据。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("toString()")]),a("br"),t._v("\n打印对象。实际调用对象本身的"),a("code",[t._v("toString()")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("equals(Object obj)")]),a("br"),t._v("\n比较两个对象是否相等。默认比较对象的地址，但对于"),a("code",[t._v("File")]),t._v("，"),a("code",[t._v("String")]),t._v("，"),a("code",[t._v("Date")]),t._v("和包装类来说，它们比较地是对象值。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("重写 "),a("code",[t._v("equals()")])]),t._v(" "),a("p",[t._v("当手动重写"),a("code",[t._v("equals()")]),t._v("时，思路为:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("判断地址是否一致("),a("code",[t._v("if (this == obj)")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("判断参数是否为空("),a("code",[t._v("if (obj == null)")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("判断类型是否一致("),a("code",[t._v("if (this.getClass() != obj.getClass())")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("判断属性值是否一致")])])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[a("code",[t._v("hashCode()")]),t._v(" 与 "),a("code",[t._v("euqals()")])]),t._v(" "),a("ul",[a("li",[t._v("如果两个对象相等，则 hashcode 一定也是相同的")]),t._v(" "),a("li",[t._v("两个对象相等，对两个 "),a("code",[t._v("equals()")]),t._v(" 方法返回 "),a("code",[t._v("true")])]),t._v(" "),a("li",[t._v("两个对象有相同的 hashcode 值，它们也不一定是相等的")])]),t._v(" "),a("p",[t._v("综上，如果一个类的 "),a("code",[t._v("equals()")]),t._v(" 方法被覆盖过，则 "),a("code",[t._v("hashCode()")]),t._v(" 方法也必须被覆盖。")])]),t._v(" "),a("h2",{attrs:{id:"system类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system类"}},[t._v("#")]),t._v(" "),a("code",[t._v("System")]),t._v("类")]),t._v(" "),a("h3",{attrs:{id:"基本信息-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-2"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang")]),t._v(" "),a("p",[a("code",[t._v("public final class System")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("System")]),t._v("类提供了标准输入输出、错误输入输出和一些访问系统属性的方法。")])]),t._v(" "),a("li",[a("p",[t._v("它是一个静态类，不能被继承，不能被实例化，所有方法都是静态方法。")])])]),t._v(" "),a("h3",{attrs:{id:"重要方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重要方法-2"}},[t._v("#")]),t._v(" 重要方法")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("static void gc()")])]),t._v(" "),a("p",[t._v("强制 Java 虚拟机启动垃圾回收机制，收集内存中所有不再被引用的对象所占用的内存空间。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("static void exit(int status)")])]),t._v(" "),a("p",[t._v("强制终止当前正在运行的 Java 虚拟机，并将参数"),a("code",[t._v("status")]),t._v("返回给系统。通常来讲，"),a("code",[t._v("status")]),t._v("为 0 表示正常终止；非 0 表示异常终止。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("static long currentTimeMillis()")]),a("br"),t._v("\n返回从 1970 年 1 月 1 日到当前系统时间的毫秒数。")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于"),a("code",[t._v("System")]),t._v("类的属性")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("in")]),a("br"),t._v("\n从键盘输入信息，只能按字节读取")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("out")]),a("br"),t._v("\n将信息标准输出到显示器（是"),a("code",[t._v("PrintStream")]),t._v("类的对象，声明："),a("code",[t._v("static final PrintStream out")]),t._v("）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("err")]),a("br"),t._v("\n将错误提示信息（使用红色字体）输出到显示器（是"),a("code",[t._v("PrintStream")]),t._v("类的对象，声明："),a("code",[t._v("static final PrintStream err")]),t._v("）")])])]),t._v(" "),a("p",[t._v("*这三个属性都是字节流，见 "),a("RouterLink",{attrs:{to:"/java/API-输入输出类库.html#i-o-stream"}},[t._v("I/O Stream")]),t._v(".")],1)]),t._v(" "),a("h2",{attrs:{id:"异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[t._v("#")]),t._v(" 异常")]),t._v(" "),a("p",[t._v("异常是一套处理和反馈问题的机制。")]),t._v(" "),a("h3",{attrs:{id:"基本信息-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-3"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang")]),t._v(" "),a("p",[a("code",[t._v("public class Throwable")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Throwable")]),t._v("类是异常 (Exception) 和错误 (Error) 的父类。")])]),t._v(" "),a("li",[a("p",[t._v("错误无法处理，而异常可以处理。")])])]),t._v(" "),a("h3",{attrs:{id:"exception"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exception"}},[t._v("#")]),t._v(" "),a("code",[t._v("Exception")])]),t._v(" "),a("p",[a("strong",[t._v("分类")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编译时异常（或称已检查异常）：编译期出现的异常，要求必须处理，抛出或者捕获。"),a("br"),t._v("\n如："),a("code",[t._v("CloneNotSupportedException")]),t._v("和"),a("code",[t._v("ParseException")])])]),t._v(" "),a("li",[a("p",[t._v("运行时异常（或称未检查异常）：编译期不报错，但运行时出现。在编译期处理与否均可，往往非语法错误。"),a("br"),t._v("\n如："),a("code",[t._v("ArithmeticException")]),t._v("、"),a("code",[t._v("ArrayIndexOutOfBoundException")]),t._v("、"),a("code",[t._v("NullPointerException")]),t._v("、"),a("code",[t._v("ClassCastException")]),t._v("和"),a("code",[t._v("NumberFormatException")])])]),t._v(" "),a("li",[a("p",[t._v("自定义异常：编程者通过继承某个异常类自己编写的异常。")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于异常处理")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("运行时异常可以随意抛出和捕获")])]),t._v(" "),a("li",[a("p",[t._v("编译时异常只能在抛出时捕获")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于异常捕获")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用多个"),a("code",[t._v("catch")]),t._v("来分别捕获不同的异常")])]),t._v(" "),a("li",[a("p",[t._v("可以捕获一个父类异常，统一处理")])]),t._v(" "),a("li",[a("p",[t._v("在一个"),a("code",[t._v("catch")]),t._v("语句中，可以使用"),a("code",[t._v("|")]),t._v("分割不同的异常来分组处理，避免了写多个"),a("code",[t._v("catch")]),t._v("语句"),a("Badge",{attrs:{text:"> Java SE 7.0"}})],1)]),t._v(" "),a("li",[a("p",[t._v("当一个方法声明抛出父类异常时，处理中必须处理父类异常")])]),t._v(" "),a("li",[a("p",[t._v("在捕获异常时，需要先捕获子类异常再捕获父类异常")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于 finally")]),t._v(" "),a("p",[t._v("无论是否发生异常都会执行")])]),t._v(" "),a("h3",{attrs:{id:"error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[t._v("#")]),t._v(" "),a("code",[t._v("Error")])]),t._v(" "),a("p",[t._v("错误。不应试图捕获的严重问题。无法处理。")]),t._v(" "),a("h2",{attrs:{id:"枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举"}},[t._v("#")]),t._v(" 枚举")]),t._v(" "),a("h3",{attrs:{id:"基本信息-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-4"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang"),a("br"),t._v(" "),a("code",[t._v("public abstract class Enum<E extends Enum<E>>")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("取值固定且能一一列举")])]),t._v(" "),a("li",[a("p",[t._v("枚举常量必须定义在首行，用"),a("code",[t._v(",")]),t._v("隔开，以"),a("code",[t._v(";")]),t._v("结尾")])]),t._v(" "),a("li",[a("p",[t._v("枚举类中允许定义属性和方法")])]),t._v(" "),a("li",[a("p",[t._v("枚举类构造函数默认且只能为私有"),a("br"),t._v("\n可以携带参数，在枚举后添加括号")])]),t._v(" "),a("li",[a("p",[t._v("可以定义抽象方法，以匿名内部类的形式实现")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("switch(表达式)")]),a("br"),t._v("\n表达式值新添Enum常量")])])]),t._v(" "),a("h2",{attrs:{id:"string类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string类"}},[t._v("#")]),t._v(" "),a("code",[t._v("String")]),t._v("类")]),t._v(" "),a("h3",{attrs:{id:"基本信息-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-5"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang"),a("br"),t._v(" "),a("code",[t._v("public final class String")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("String")]),t._v("类是一个最终类，表示字符串。")])]),t._v(" "),a("li",[a("p",[t._v("所有字符串都是"),a("code",[t._v("String")]),t._v("类的实例。")])]),t._v(" "),a("li",[a("p",[t._v("字符串是常量，创建后不可更改，但可以被共享。")])])]),t._v(" "),a("h3",{attrs:{id:"重要方法-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重要方法-3"}},[t._v("#")]),t._v(" 重要方法")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("char chatAt()")]),a("br"),t._v("\n获取字符串指定下标字符。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("int length()")]),a("br"),t._v("\n获取字符串长度。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("char[] toCharArray()")]),a("br"),t._v("\n将字符串转化为字符数组。")])]),t._v(" "),a("li",[a("p",[t._v("其他不改变原串的方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("int compareTo(String another)")])]),t._v(" "),a("td",[t._v("判断两个字符串大小，根据返回值正负来确定")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("String concat(String str)")])]),t._v(" "),a("td",[t._v("拼接字符串，不该面原字符串")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("boolean contains(String str)")])]),t._v(" "),a("td",[t._v("是否包含该子串")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("boolean equals(Object o)")])]),t._v(" "),a("td",[t._v("是否相等")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("byte[] getBytes()")])]),t._v(" "),a("td",[t._v("将字符串转化为字节数组")]),t._v(" "),a("td",[t._v("通过"),a("code",[t._v("String")]),t._v("的构造方法将字节数组转化为字符串")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("int indexOf(int ch, int index)")])]),t._v(" "),a("td",[t._v("指定下标开始寻找指定字符第一次出现的位置")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("static String valueOf()")])]),t._v(" "),a("td",[t._v("将传入值转换为字符串")]),t._v(" "),a("td",[t._v("传入对象则会调用对象的"),a("code",[t._v("toString()")]),t._v("；"),a("br"),t._v("传入字符数组对象，则打印其内容")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("String replaceAll(String reg, String str)")])]),t._v(" "),a("td",[t._v("替换指定内容")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("boolean matches(String reg)")])]),t._v(" "),a("td",[t._v("是否匹配指定规则")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[a("code",[t._v("String[] split(String reg)")])]),t._v(" "),a("td",[t._v("按指定规则切割字符串")]),t._v(" "),a("td",[t._v("作为切割的符号会被消除；"),a("br"),t._v("若两个切割符号相连，则会被分出一个空字符串"),a("code",[t._v('""')])])])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("特别地")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('拼接字符串可以使用运算符"'),a("code",[t._v("+")]),t._v('"，本质上 Java 编译器会调用'),a("code",[t._v("StringBuffer")]),t._v("（或类似技术）来实现这个拼接操作。")])]),t._v(" "),a("li",[a("p",[t._v("拼接多个字符串建议使用"),a("code",[t._v("StringBuilder")]),t._v("类，少量字符串使用"),a("code",[t._v("+")]),t._v("运算符")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("StringBuilder")]),t._v("和"),a("code",[t._v("StringBuffer")]),t._v("使用方法完全一致")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("StringBuilder")]),t._v("线程不安全")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("StringBuffer")]),t._v("线程安全")])])])]),t._v(" "),a("li",[a("p",[t._v("故代码："),a("br"),t._v(" "),a("strong",[t._v("Input")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("实际上的执行效果是：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("在最后的"),a("code",[t._v("toString()")]),t._v("中生成了新的字符串对象，类似于（真实过程更加复杂）：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("p",[a("strong",[t._v("分析代码")]),a("br"),t._v(" "),a("strong",[t._v("Input")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",[a("li",[a("p",[t._v("第一句")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("内存图："),a("br"),t._v(" "),a("img",{attrs:{src:"/img/String_01.jpg",alt:'String s1 = "ab";'}})])]),t._v(" "),a("li",[a("p",[t._v("第二句")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("内存图："),a("br"),t._v(" "),a("img",{attrs:{src:"/img/String_02.jpg",alt:'String s2 = new String("ab");'}})])]),t._v(" "),a("li",[a("p",[t._v("第三句")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("内存图："),a("br"),t._v(" "),a("img",{attrs:{src:"/img/String_03.jpg",alt:'String s4 = "a";'}})])]),t._v(" "),a("li",[a("p",[t._v("第四句")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("由"),a("code",[t._v("StringBuilder")]),t._v("实现"),a("code",[t._v("+=")]),t._v("操作，具体步骤为：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("生成"),a("code",[t._v("StringBuilder")]),t._v("对象")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("内存图："),a("br"),t._v(" "),a("img",{attrs:{src:"/img/String_04.jpg",alt:'new StringBuilder("a")'}})])]),t._v(" "),a("li",[a("p",[a("code",[t._v("StringBuilder")]),t._v("对象取"),a("code",[t._v("append()")]),t._v("方法拼接字符串")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("内存图：\n"),a("img",{attrs:{src:"/img/String_05.jpg",alt:'new StringBuilder("a").append("b")'}}),a("br"),t._v("\n堆内存"),a("code",[t._v("0x3f4c")]),t._v('断开与常量"a"('),a("code",[t._v("0x45fa")]),t._v(')的链接，转而链接常量"ab"('),a("code",[t._v("0x003d")]),t._v(")。")])]),t._v(" "),a("li",[a("p",[t._v("调用"),a("code",[t._v("toString()")]),t._v("生成新的"),a("code",[t._v("String")]),t._v("对象")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("内存图："),a("br"),t._v(" "),a("img",{attrs:{src:"/img/String_06.jpg",alt:'new StringBuilder("a").append("b").toString()'}})])]),t._v(" "),a("li",[a("p",[t._v("将新生成的"),a("code",[t._v("String")]),t._v("对象的管理权交给"),a("code",[t._v("s4")]),t._v("（赋值）")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("内存图："),a("br"),t._v(" "),a("img",{attrs:{src:"/img/String_07.jpg",alt:'s4 = new StringBuilder("a").append("b").toString();'}}),t._v("\n栈内存内"),a("code",[t._v("s4")]),t._v('断开与常量"a"('),a("code",[t._v("0x45fa")]),t._v(")的链接，转而链接堆内存"),a("code",[t._v("0x7bce")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("结束操作，最终结果"),a("br"),t._v("\n内存图："),a("br"),t._v(" "),a("img",{attrs:{src:"/img/String_08.jpg",alt:"完成"}})])])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于编码")]),t._v(" "),a("p",[t._v("按照某些规律将字符映射成字节。这个记录规则就是编码表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("内容")]),t._v(" "),a("th",[t._v("特点")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ASCII")]),t._v(" "),a("td",[t._v("0 至 127")]),t._v(" "),a("td",[t._v("不完全")])]),t._v(" "),a("tr",[a("td",[t._v("西欧码表 ISO-8859-1")]),t._v(" "),a("td",[t._v("西欧字符")]),t._v(" "),a("td",[t._v("一个字母占 1 字节")])]),t._v(" "),a("tr",[a("td",[t._v("GB2312")]),t._v(" "),a("td",[t._v("常见基本简体汉字和部分常用繁体汉字")]),t._v(" "),a("td",[t._v("一个字符占 2 字节")])]),t._v(" "),a("tr",[a("td",[t._v("UTF-8")]),t._v(" "),a("td",[t._v("常见语言的常见字符")]),t._v(" "),a("td",[t._v("一个字符占 3 字节")])])])])]),t._v(" "),a("p",[t._v("→ "),a("a",{attrs:{href:"#scanner%E7%B1%BB"}},[t._v("关于"),a("code",[t._v("Scanner")]),t._v("类")])]),t._v(" "),a("h3",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),a("p",[t._v("正则表达式本质上是"),a("strong",[t._v("指定匹配")]),t._v("或"),a("strong",[t._v("筛选规则")]),t._v("的一系列表达式。")]),t._v(" "),a("p",[a("strong",[t._v("规则")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("元字符与限定符：正则表达式中含有表达特殊意义的字符，这些字符成为元字符；在正则表达式中，需要表示元字符出现次数等逻辑规则时，使用限定符来表示。")])]),t._v(" "),a("li",[a("p",[t._v("在 Java 中，由于使用"),a("code",[t._v("\\")]),t._v("转义且某些元字符中本身包含"),a("code",[t._v("\\")]),t._v("，故在使用时需要写作"),a("code",[t._v("\\\\")]),t._v("。如：表示任意一个数字的正则表达式在 Java 中写作"),a("code",[t._v("\\\\d")]),t._v("。")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("元字符/限定符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v(".")])]),t._v(" "),a("td",[t._v("任意字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\d")])]),t._v(" "),a("td",[t._v("0至9任意一个数字")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\D")])]),t._v(" "),a("td",[t._v("任意一个非数字")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\s")])]),t._v(" "),a("td",[t._v("空格类字符，如"),a("code",[t._v("\\t")]),t._v(", "),a("code",[t._v("\\n")]),t._v(", "),a("code",[t._v("\\x0B")]),t._v(", "),a("code",[t._v("\\f")]),t._v(", "),a("code",[t._v("\\r")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\S")])]),t._v(" "),a("td",[t._v("任意一个非空格类字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\w")])]),t._v(" "),a("td",[t._v("除"),a("code",[t._v("$")]),t._v("外的可用于标识符的字符（字母(a-zA-Z)、数字(0-9)、下划线(_)）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\W")])]),t._v(" "),a("td",[t._v("任意一个不能用于标识符的字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("^")])]),t._v(" "),a("td",[t._v("串开头")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$")])]),t._v(" "),a("td",[t._v("串结尾")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("|")])]),t._v(" "),a("td",[t._v("或")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("+")])]),t._v(" "),a("td",[t._v("出现1次或多次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("?")])]),t._v(" "),a("td",[t._v("出现0次或1次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("出现0次或多次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n}")])]),t._v(" "),a("td",[t._v("出现n次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n,}")])]),t._v(" "),a("td",[t._v("出现至少n次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n,m}")])]),t._v(" "),a("td",[t._v("出现n至m次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("()")])]),t._v(" "),a("td",[t._v("捕获组")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[]")])]),t._v(" "),a("td",[t._v("单个字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\n")])]),t._v(" "),a("td",[t._v("编号为n的捕获组")])])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("这里：{n,m|n,m∈N"),a("sub",[t._v("+")]),t._v("}")])])]),t._v(" "),a("p",[a("strong",[t._v("捕获组")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("起编号作用")])]),t._v(" "),a("li",[a("p",[t._v("从左括号出现的位置开始计算")])])]),t._v(" "),a("p",[t._v("例如："),a("code",[t._v("(A((BC(D))E))F)")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("捕获组")]),t._v(" "),a("th",[t._v("内容")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("\\\\1")])]),t._v(" "),a("td",[a("code",[t._v("A((BC(D))E)")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\\\2")])]),t._v(" "),a("td",[a("code",[t._v("(BC(D))E")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\\\3")])]),t._v(" "),a("td",[a("code",[t._v("BC(D)")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\\\4")])]),t._v(" "),a("td",[a("code",[t._v("D")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\\\5")])]),t._v(" "),a("td",[a("code",[t._v("F")])])])])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("String")]),t._v("类中的使用")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用"),a("code",[t._v("boolean matches(String regex)")]),t._v("来使用正则表达式验证字符串是否符合规则。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("String")]),t._v("类还提供了其他的验证规则函数，如："),a("code",[t._v("boolean startsWith(String prefix)")]),t._v("用来验证是否由某字符串打头。")])])]),t._v(" "),a("blockquote",[a("hr")]),t._v(" "),a("h2",{attrs:{id:"包装类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装类"}},[t._v("#")]),t._v(" 包装类")]),t._v(" "),a("h3",{attrs:{id:"基本信息-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-6"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[t._v("对于每种基本数据类型, Java 都提供了与其对应的类。这些类称为包装类。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("基本数据类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("byte")])]),t._v(" "),a("th",[a("code",[t._v("short")])]),t._v(" "),a("th",[a("code",[t._v("int")])]),t._v(" "),a("th",[a("code",[t._v("long")])]),t._v(" "),a("th",[a("code",[t._v("float")])]),t._v(" "),a("th",[a("code",[t._v("double")])]),t._v(" "),a("th",[a("code",[t._v("char")])]),t._v(" "),a("th",[a("code",[t._v("boolean")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("包装类")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Byte")])]),t._v(" "),a("td",[a("code",[t._v("Short")])]),t._v(" "),a("td",[a("code",[t._v("Integer")])]),t._v(" "),a("td",[a("code",[t._v("Long")])]),t._v(" "),a("td",[a("code",[t._v("Float")])]),t._v(" "),a("td",[a("code",[t._v("Double")])]),t._v(" "),a("td",[a("code",[t._v("Character")])]),t._v(" "),a("td",[a("code",[t._v("Boolean")])])])])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("int")]),t._v("和"),a("code",[t._v("char")]),t._v("所对应的包装类为单词的全拼。")])]),t._v(" "),a("h3",{attrs:{id:"装箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#装箱"}},[t._v("#")]),t._v(" 装箱")]),t._v(" "),a("p",[t._v("将"),a("strong",[t._v("基本数据类型转换为对应的引用数据类型对象")]),t._v("的操作。")]),t._v(" "),a("h3",{attrs:{id:"自动装箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动装箱"}},[t._v("#")]),t._v(" 自动装箱 "),a("Badge",{attrs:{text:"Java SE 5.0+"}})],1),t._v(" "),a("p",[t._v("将一个"),a("strong",[t._v("基本数据类型变量直接赋值给对应的引用数据类型对象")]),t._v("。本质上调用了对应的"),a("code",[t._v("valueOf()")]),t._v("。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" integer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("相当于：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" integer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("所有相同类型地包装类对象之间值的比较，应当全部使用equals()。")]),t._v(" "),a("p",[t._v("在值范围在 -128 到 127内的赋值，Integer对象会在IntegerCache.cache中产生，会服用已有对象。此时使用==比较是安全的。"),a("br"),t._v("\n但在范围之外的所有数据会在堆中产生，不会复用已有对象。"),a("br"),t._v("\n故推荐全部使用equals()来规避风险。")])]),t._v(" "),a("h3",{attrs:{id:"自动拆箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动拆箱"}},[t._v("#")]),t._v(" 自动拆箱 "),a("Badge",{attrs:{text:"Java SE 5.0+"}})],1),t._v(" "),a("p",[t._v("将一个引用数据类型对象直接赋值给对应基本数据类型变量。本质上调用了对象的"),a("code",[t._v("xxxValue()")]),t._v("。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("相当于：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("intValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("当发生基本数据类型和包装类运算时，会发生自动拆箱。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于哈希码")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("整数的哈希码是其本身，但小数的哈希码需要经过计算才能得到。")])]),t._v(" "),a("li",[a("p",[t._v("字符的哈希码是其对应的编码。")])]),t._v(" "),a("li",[a("p",[t._v("布尔类型的哈希码为特殊值，如"),a("code",[t._v("true")]),t._v("的哈希码为"),a("code",[t._v("1231")]),t._v("；"),a("code",[t._v("false")]),t._v("为"),a("code",[t._v("1237")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("八种基本数据类型的哈希码都为固定值。")])])])]),t._v(" "),a("h2",{attrs:{id:"math类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math类"}},[t._v("#")]),t._v(" "),a("code",[t._v("Math")]),t._v("类")]),t._v(" "),a("h3",{attrs:{id:"基本信息-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-7"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang"),a("br"),t._v(" "),a("code",[t._v("public final class Math")])]),t._v(" "),a("p",[a("code",[t._v("Math")]),t._v("类是一个最终类，其构造函数是私有的。")]),t._v(" "),a("p",[t._v("该类提供了一系列静态方法，这些方法实现了基本的数学运算，如三角函数、绝对值、平方根等。")]),t._v(" "),a("h3",{attrs:{id:"重要方法-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重要方法-4"}},[t._v("#")]),t._v(" 重要方法")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("static double ceil(double a)")]),a("br"),t._v("\n向上取整")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("static double floor(double a)")]),a("br"),t._v("\n向下取整")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("static long round(double a)")]),t._v("/"),a("code",[t._v("static int round(float a)")]),a("br"),t._v("\n四舍五入")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("static double sqrt(double a)")]),a("br"),t._v("\n求平方根")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("static double pow(double a, double b)")]),a("br"),t._v("\n求幂 (a"),a("sup",[t._v("b")]),t._v(")")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("static double random()")]),a("br"),t._v("\n返回一个随机数 (0.0≤x<1.0)")])])]),t._v(" "),a("h3",{attrs:{id:"strictfp关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strictfp关键字"}},[t._v("#")]),t._v(" "),a("code",[t._v("strictfp")]),t._v("关键字")]),t._v(" "),a("p",[t._v("精确浮点(strict float point)，用于修饰类、接口和方法。")]),t._v(" "),a("p",[t._v("被修饰的代码在执行中以80位二进制数来运算小数，结果会保留为64位。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("特别的")]),t._v(" "),a("p",[t._v("当适用精确运算时，Java 提供了"),a("code",[t._v("BigDecimal")]),t._v("类。")]),t._v(" "),a("p",[t._v("这个类中对基础运算（如加、减、乘、除）提供了方法支持，故，不能使用运算符（如"),a("code",[t._v("+")]),t._v("、"),a("code",[t._v("-")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("/")]),t._v("）来进行运算。")])]),t._v(" "),a("h2",{attrs:{id:"反射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射"}},[t._v("#")]),t._v(" 反射")]),t._v(" "),a("h3",{attrs:{id:"基本信息-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本信息-8"}},[t._v("#")]),t._v(" 基本信息")]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang"),a("br"),t._v(" "),a("code",[t._v("public final class Class<T>")])]),t._v(" "),a("p",[a("strong",[t._v("Package")]),t._v(" java.lang.reflect")]),t._v(" "),a("p",[t._v("Java 提供了反射机制，使用该机制可以动态操作 Java 代码（例如程序经过编译后的变动），也可以利用其来分析类的具体能力。它也体现了高内聚低耦合的设计思想。")]),t._v(" "),a("h3",{attrs:{id:"class类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class类"}},[t._v("#")]),t._v(" "),a("code",[t._v("Class")]),t._v("类")]),t._v(" "),a("p",[a("code",[t._v("Class")]),t._v(" 类的实例代表运行中的 Java 应用程序中的类和接口。枚举是类的一种，注解是接口的一种。"),a("br"),t._v("\n每个数组也都属于一个类，该类反映为一个 "),a("code",[t._v("Class")]),t._v(" 对象，该对象被所有具有相同元素类型和维数的数组共享。"),a("br"),t._v("\nJava 的原始类型（布尔、字节、"),a("code",[t._v("char")]),t._v("、"),a("code",[t._v("short")]),t._v("、"),a("code",[t._v("int")]),t._v("、"),a("code",[t._v("long")]),t._v("、"),a("code",[t._v("float")]),t._v(" 和 "),a("code",[t._v("double")]),t._v("）以及关键字 "),a("code",[t._v("void")]),t._v(" 也被表示为 "),a("code",[t._v("Class")]),t._v(" 对象。（即存在 "),a("code",[t._v("int.class")]),t._v(", "),a("code",[t._v("void.class")]),t._v(" 等 "),a("code",[t._v("Class")]),t._v(" 对象）。"),a("br"),t._v(" "),a("code",[t._v("Class")]),t._v(" 没有公共构造函数。相反，"),a("code",[t._v("Class")]),t._v(" 对象是由 Java 虚拟机在加载类时自动构建的，并通过调用类加载器中的 "),a("code",[t._v("defineClass()")]),t._v(" 方法来构建。")]),t._v(" "),a("p",[a("strong",[t._v("获取 Class 对象")]),a("br"),t._v("\n通过获取具体类的 Class 对象（某些地方也称为字节码对象），我们可以利用它们获取该类的类信息。获取方法：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("对象.getClass()")]),a("br"),t._v("\n通过某类的具体实例来获取该类的 "),a("code",[t._v("Class")]),t._v(" 对象。调用了 "),a("a",{attrs:{href:"#object%E7%B1%BB"}},[t._v("Object 类")]),t._v("中的方法来实现。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("类名.class")]),a("br"),t._v("\n每个类都有一个隐含的静态属性 "),a("code",[t._v("class")]),t._v(", 通过类名直接获取该属性来获取到 "),a("code",[t._v("Class")]),t._v(" 对象。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v('Class.forName("类全路径")')]),a("br"),t._v(" "),a("code",[t._v("Class")]),t._v(" 类的静态方法，获取 "),a("code",[t._v("Class")]),t._v(" 对象。"),a("br"),t._v("\n它是一种动态加载类的方法，这样的加载方式不在程序编译期完成，而是在运行时再动态加载。"),a("br"),t._v("\n例如：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Admin")]),t._v(" admin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Admin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        admin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("这样的主函数经过编译后，编译器无法找到类 "),a("code",[t._v("Admin")]),t._v(" 和 "),a("code",[t._v("User")]),t._v(" 以及它们所对应的 "),a("code",[t._v("login()")]),t._v(" 而报错。这样的类加载形式是静态加载。")]),t._v(" "),a("p",[t._v("进行改造：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 统一的人员接口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具体实现")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Admin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Admin login."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"User login."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过传入参数动态加载类")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" personClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建实例")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" personClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br")])]),a("p",[t._v("通过这样的改造，主函数不必在编译时期就指定具体的 "),a("code",[t._v("Admin")]),t._v(" 或者 "),a("code",[t._v("User")]),t._v(" 类，即使它们暂时不存在也不影响主函数编译失败。在程序运行时，给程序传入具体要加载的类动态加载并调用其 "),a("code",[t._v("login()")]),t._v(" 来完成整个功能。")])])]),t._v(" "),a("p",[a("strong",[t._v("获取构造函数")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("class对象.getConstructor(构造函数参数类型class对象)")]),a("br"),t._v("\n返回指定参数类型的公共构造函数。"),a("br"),t._v("\n例如："),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有参构造方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main 函数中，获取到 class 对象 cl 后")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取有参构造函数(传入构造方法需要的 String 和 int 类型的 class 对象)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constructor")]),t._v(" con "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConstructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])])]),t._v(" "),a("li",[a("code",[t._v("class对象.getConstructors()")]),a("br"),t._v("\n获取所有公共构造函数。")]),t._v(" "),a("li",[a("code",[t._v("class对象.getDeclaredConstractors(构造函数参数类型字class对象)")]),a("br"),t._v("\n返回指定参数类型的全部构造函数（包括 "),a("code",[t._v("public")]),t._v(" "),a("code",[t._v("private")]),t._v(" 等）。")])]),t._v(" "),a("p",[a("strong",[t._v("获取实例对象")]),a("br"),t._v(" "),a("code",[t._v("class对象.newInstance()")]),t._v(" 要求存在无参数构造函数")]),t._v(" "),a("p",[a("strong",[t._v("获取类属性")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v('class对象.getFields("属性名")')]),a("br"),t._v("\n获取所有公有属性")]),t._v(" "),a("li",[a("code",[t._v('class对象.getDeclaredFields("属性名")')]),a("br"),t._v("\n获取所有属性")])]),t._v(" "),a("p",[a("strong",[t._v("获取方法对象")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v('class对象.getMethod("方法名", 方法对应参数的class对象)')]),a("br"),t._v("\n获取公有方法")]),t._v(" "),a("li",[a("code",[t._v('class对象.getDeclaredMethod("方法名", 方法对应参数的class对象)')])])]),t._v(" "),a("p",[a("strong",[t._v("获取所实现的接口")]),a("br"),t._v(" "),a("code",[t._v("class对象.getInterfaces()")])]),t._v(" "),a("p",[a("strong",[t._v("其他常用方法")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("class对象.getName()")])]),t._v(" "),a("td",[t._v("获取类全路径名")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.getPackage()")])]),t._v(" "),a("td",[t._v("获取类所在包")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.getSimpleName()")])]),t._v(" "),a("td",[t._v("获取当前类名")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.getSuperclass()")])]),t._v(" "),a("td",[t._v("获取父类名")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isAnonymousClass()")])]),t._v(" "),a("td",[t._v("是否是匿名内部类")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isLocalClass()")])]),t._v(" "),a("td",[t._v("是否是方法内部类")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isPrimitive()")])]),t._v(" "),a("td",[t._v("是否是基本类型")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isArray()")])]),t._v(" "),a("td",[t._v("是否是数组")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isEnum()")])]),t._v(" "),a("td",[t._v("是否是枚举")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isInstance(指定对象)")])]),t._v(" "),a("td",[t._v("判断指定对象是否是该类的实现")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isInterface()")])]),t._v(" "),a("td",[t._v("是否是接口")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("class对象.isAssignableFrom(目标类型)")])]),t._v(" "),a("td",[t._v("判断目标类型是否是当前类的本身或子类")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[a("code",[t._v("Object")]),t._v(" 与 "),a("code",[t._v("Class")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Object")]),t._v(" 是顶级父类，"),a("code",[t._v("Class")]),t._v(" 也继承自 "),a("code",[t._v("Object")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("Class")]),t._v(" 类用于反射，它表示了 Class 这样的一种类，可以利用它来进一步获取关于类的各种信息。")]),t._v(" "),a("li",[a("code",[t._v("Class")]),t._v(" 类的实例表示了当前运行着的 Java 程序的类，每一个类都会在运行时自动创建出它对应的 "),a("code",[t._v("Class")]),t._v(" 类实例。")]),t._v(" "),a("li",[a("code",[t._v("Class")]),t._v(" 类的构造函数私有，只能通过 JVM 来访问。所以无法手动创建 "),a("code",[t._v("Class")]),t._v(" 类的实例。")])])]),t._v(" "),a("h3",{attrs:{id:"constructor类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor类"}},[t._v("#")]),t._v(" "),a("code",[t._v("Constructor")]),t._v("类")]),t._v(" "),a("p",[t._v("描述构造方法的类。")]),t._v(" "),a("p",[a("strong",[t._v("获取实例对象")]),a("br"),t._v(" "),a("code",[t._v("constructor对象.newInstance()")])]),t._v(" "),a("p",[a("strong",[t._v("获取构造方法返回值类型")]),a("br"),t._v(" "),a("code",[t._v("constructor对象.getType()")]),t._v(" 返回值是 "),a("code",[t._v("Class")]),t._v(" 类型变量")]),t._v(" "),a("p",[a("strong",[t._v("获取构造方法参数列表")]),a("br"),t._v(" "),a("code",[t._v("constructor对象.getParameterTypes()")])]),t._v(" "),a("h3",{attrs:{id:"field类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#field类"}},[t._v("#")]),t._v(" "),a("code",[t._v("Field")]),t._v("类")]),t._v(" "),a("p",[t._v("描述属性的类。")]),t._v(" "),a("p",[a("strong",[t._v("获取指定对象的属性值")]),a("br"),t._v(" "),a("code",[t._v("field对象.get(指定对象)")]),t._v(" 可能需要使用 "),a("code",[t._v(".setAccessible(true)")]),t._v(" 来暴力破解访问权限限制。")]),t._v(" "),a("p",[a("strong",[t._v("设置指定对象的属性值")]),a("br"),t._v(" "),a("code",[t._v("field对象.set(指定对象)")])]),t._v(" "),a("p",[a("strong",[t._v("获取属性声明类型")]),a("br"),t._v(" "),a("code",[t._v("field对象.getType()")]),t._v(" 返回值是 "),a("code",[t._v("Class")]),t._v(" 类型变量")]),t._v(" "),a("p",[a("strong",[t._v("获取属性名称")]),a("br"),t._v(" "),a("code",[t._v("field对象.getName()")])]),t._v(" "),a("h3",{attrs:{id:"method类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#method类"}},[t._v("#")]),t._v(" "),a("code",[t._v("Method")]),t._v("类")]),t._v(" "),a("p",[t._v("描述方法的类。")]),t._v(" "),a("p",[a("strong",[t._v("执行方法")]),a("br"),t._v(" "),a("code",[t._v("method对象.invoke(作用对象, 参数)")]),a("br"),t._v("\n如果方法有返回值类型则返回该类型变量，若方法无返回则返回 "),a("code",[t._v("null")])]),t._v(" "),a("p",[a("strong",[t._v("破解权限")]),a("br"),t._v(" "),a("code",[t._v("method对象.setAccessible(true)")]),t._v(" 允许在类外执行，一般配合执行方法一起使用。")]),t._v(" "),a("p",[a("strong",[t._v("获取方法返回值类型")]),a("br"),t._v(" "),a("code",[t._v("method对象.getReturnType()")])]),t._v(" "),a("p",[a("strong",[t._v("获取方法参数列表")]),a("br"),t._v(" "),a("code",[t._v("method对象.getParameterTypes()")])]),t._v(" "),a("p",[a("strong",[t._v("获取抛出异常")]),a("br"),t._v(" "),a("code",[t._v("method对象.getExceptionTypes()")])]),t._v(" "),a("p",[a("strong",[t._v("判断是否含有可变参数")]),a("br"),t._v(" "),a("code",[t._v("method对象.inVarArgs()")])])])}),[],!1,null,null,null);s.default=v.exports}}]);