(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{504:function(i,a,e){"use strict";e.r(a);var t=e(19),n=Object(t.a)({},(function(){var i=this,a=i.$createElement,e=i._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[e("h1",{attrs:{id:"android-12-容器层级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#android-12-容器层级"}},[i._v("#")]),i._v(" Android 12 容器层级")]),i._v(" "),e("h2",{attrs:{id:"结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[i._v("#")]),i._v(" 结构")]),i._v(" "),e("p",[i._v("在 Android 12 中，窗口按树形层级进行排布。其决定由 Feature 和 36 个层级共同影响。"),e("br"),i._v("\nAndroid 12 原生定义 6 个 Feature：")]),i._v(" "),e("ul",[e("li",[i._v("WindowedMagnification")]),i._v(" "),e("li",[i._v("HideDisplayCutout")]),i._v(" "),e("li",[i._v("OneHandedBackgroundPanel")]),i._v(" "),e("li",[i._v("OneHanded")]),i._v(" "),e("li",[i._v("FullscreenMagnification")]),i._v(" "),e("li",[i._v("ImePlaceholder")])]),i._v(" "),e("p",[i._v("36 个层级：")]),i._v(" "),e("ol",[e("li",[i._v("Wallpaper")]),i._v(" "),e("li",[i._v("[DefaultTaskDisplayArea][APPLICATION_LAYER]")]),i._v(" "),e("li",[i._v("Presentation, Dock Driver, QS Dialog, Phone")]),i._v(" "),e("li",[i._v("Search Bar, Voice Interaction Starting")]),i._v(" "),e("li",[i._v("Voice Interaction")]),i._v(" "),e("li",[i._v("Input Consumer")]),i._v(" "),e("li",[i._v("System Dialog")]),i._v(" "),e("li",[i._v("Toast")]),i._v(" "),e("li",[i._v("Priority Phone")]),i._v(" "),e("li",[i._v("System Alert, System Error (Cannot add internal system window)")]),i._v(" "),e("li",[i._v("System Overlay (Cannot add internal system window)")]),i._v(" "),e("li",[i._v("Application Overlay")]),i._v(" "),e("li",[i._v("System Alert (Can add internal system window)")]),i._v(" "),e("li"),i._v(" "),e("li",[i._v("Input Method")]),i._v(" "),e("li",[i._v("Input Method Dialog")]),i._v(" "),e("li",[i._v("Status Bar")]),i._v(" "),e("li",[i._v("Status Bar Additional")]),i._v(" "),e("li",[i._v("Notification Shade")]),i._v(" "),e("li",[i._v("Status Bar Sub Panel")]),i._v(" "),e("li",[i._v("Keyguard Dialog")]),i._v(" "),e("li",[i._v("Volume Overlay")]),i._v(" "),e("li",[i._v("System Overlay (Can add internal system window)")]),i._v(" "),e("li",[i._v("Navigation Bar")]),i._v(" "),e("li",[i._v("Navigation Bar Panel")]),i._v(" "),e("li",[i._v("Screenshot")]),i._v(" "),e("li",[i._v("System Error (Cannot add internal system window)")]),i._v(" "),e("li",[i._v("Magnification Overlay")]),i._v(" "),e("li",[i._v("Display Overlay")]),i._v(" "),e("li",[i._v("Drag")]),i._v(" "),e("li",[i._v("Accessibility Overlay")]),i._v(" "),e("li",[i._v("Accessibility Magnification Overlay")]),i._v(" "),e("li",[i._v("Secure System Overlay")]),i._v(" "),e("li",[i._v("Boot Progress")]),i._v(" "),e("li",[i._v("Pointer")])]),i._v(" "),e("p",[i._v("应用集中于第 2 层。层数越高位置越靠上。"),e("br"),i._v("\n系统按照算法利用原生 Feature 和它们能覆盖的层数生成基础树状结构。在此基础上再安排具体 APP 等的窗口位置。")]),i._v(" "),e("p",[i._v("树状结构生成算法类似 2048 执行向上推的操作后，依据按断层左右分开节点，上下进行连接。")]),i._v(" "),e("p",[e("img",{attrs:{src:"/img/android/feature.png",alt:"Feature"}})]),i._v(" "),e("blockquote",[e("p",[i._v("DisplayAreaPolicyBuilder.build() 里根据各个 Feature 添加的顺序、应用的层级，以及依次递补的原则，构建DisplayArea 层级，并添加到屏幕根容器DisplayContent里。\n例如：")]),i._v(" "),e("ul",[e("li",[i._v("第一个 Feature WindowedMagnification 只能应用到 0~31层级，那么就先创建一个名为 WindowedMagnification:0:31 的DisplayArea，后面的32~35层级只能递补应用第二个 Feature HideDisplayCutout，因此会创建平级的名为 HideDisplayCutout:32:35 的 DisplayArea；")]),i._v(" "),e("li",[i._v("第二个 Feature HideDisplayCutout 只能应用 0~31层级的 0~16 层级，因此创建 HideDisplayCutout:0:16 挂到 WindowedMagnification:0:31 下；")]),i._v(" "),e("li",[i._v("第17层级往下找只能递补应用第四个 Feature OneHanded，因此创建 OneHanded:17:17 挂到 WindowedMagnification:0:31 下，同理第18层级可以应用 Feature HideDisplayCutout，创建 HideDisplayCutout:18:18 同样挂到 WindowedMagnification:0:31 下。")]),i._v(" "),e("li",[i._v("注意第24~25层，WindowedMagnification 往下没有可以应用的 Feature，这时会增补一个 Leaf:24:25")])])]),i._v(" "),e("p",[i._v("系统默认树状结构："),e("br"),i._v(" "),e("img",{attrs:{src:"/img/android/defualt_container.png",alt:"Default Container"}})]),i._v(" "),e("p",[i._v("打开了屏幕录制悬浮窗的树状结构："),e("br"),i._v(" "),e("img",{attrs:{src:"/img/android/recorder_container.png",alt:"Recorder Container"}})]),i._v(" "),e("p",[i._v("在这棵树中，上下结构控制了 Feature 可以对应的窗口，左右体现了 Z 轴位置上下。越靠右位置越高。")]),i._v(" "),e("h2",{attrs:{id:"参考文献或资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文献或资料"}},[i._v("#")]),i._v(" 参考文献或资料")]),i._v(" "),e("ol",[e("li",[i._v("窗口容器管理")]),i._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/qq_34211365/article/details/122349862",target:"_blank",rel:"noopener noreferrer"}},[i._v("Android12 窗口组织方式（对比Android10）"),e("OutboundLink")],1)]),i._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/jieliaoyuan8279/article/details/123157937",target:"_blank",rel:"noopener noreferrer"}},[i._v("安卓12窗口层次: DisplayArea树"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);