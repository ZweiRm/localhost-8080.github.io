(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{430:function(t,s,a){"use strict";a.r(s);var e=a(16),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"语法元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法元素"}},[t._v("#")]),t._v(" 语法元素")]),t._v(" "),a("h2",{attrs:{id:"缩进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缩进"}},[t._v("#")]),t._v(" 缩进")]),t._v(" "),a("p",[t._v("用以表达程序框架。")]),t._v(" "),a("ul",[a("li",[t._v("缩进是语法的一部分，是表达代码之间层次关系的唯一手段，不正确的缩进会导致程序运行错误。")]),t._v(" "),a("li",[t._v("每个程序内缩进形式需相同，如使用 4 个空格或 1 个 TAB.")])]),t._v(" "),a("h2",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("用以提高程序可读性，不会被执行。")]),t._v(" "),a("ul",[a("li",[t._v("单行注释：以"),a("code",[t._v("#")]),t._v("开头，其后为注释内容。例如："),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这是一行注释")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("多行注释：以"),a("code",[t._v("'''")]),t._v("或"),a("code",[t._v('"""')]),t._v("开头和结尾，其中包裹的为注释内容。例如："),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n注释第一行\n注释第二行 \n'''")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("变量是用以保存和表示数据的占位符号。")]),t._v(" "),a("ul",[a("li",[t._v("在 Python 程序中，使用标识符来对变量命名。即命名是关联标识符和变量的过程。"),a("br"),t._v(" "),a("strong",[t._v("标识符")]),t._v("：大小写字母、数字、下划线、汉字等字符以及其组合。其中，标识符对大小写敏感；要求首字母不能为数字；标识符不能与保留字相同。"),a("br"),t._v(" "),a("strong",[t._v("保留字")]),t._v("：也称关键字，共 33 个。是 Python 语言内部定义并保留使用的一系列标识符。\n"),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("and")])]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("elif")])]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("import")])]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("raise")])]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[a("code",[t._v("global")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("as")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("else")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("in")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("return")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("nonlocal")])])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("assert")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("except")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("is")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("try")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("True")])])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("break")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("finally")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("lambda")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("while")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("False")])])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("class")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("for")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("not")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("with")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("None")])])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("continue")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("from")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("or")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("yield")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("def")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("if")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("pass")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("strong",[a("code",[t._v("del")])])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])])]),t._v(" "),a("li",[t._v("变量可以被赋值，使用赋值运算符 "),a("code",[t._v("=")]),t._v(" 来向变量赋值或者改值。")])]),t._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("是供计算机程序理解的数据形式。在程序设计语言中不允许出现语法歧义，故，需要规定一些向计算机表达数据的具体形式，即数据类型。")]),t._v(" "),a("ul",[a("li",[t._v("数字类型：包含正数类型和浮点数类型两类。")]),t._v(" "),a("li",[t._v("字符串类型：由 0 个或多个字符组成的有序字符序列。使用一对单引号或双引号包裹表示。\n"),a("ul",[a("li",[t._v("字符串是字符的有序序列，可以对其中的字符进行索引。")]),t._v(" "),a("li",[t._v("特别地，Python 提供两种序号系统：正向递增序号和反向递减序号。正向递增序号从 0 开始计；反向递减从 -1 开始计。")]),t._v(" "),a("li",[t._v("索引操作：返回字符串中的某个单个字符，语法为："),a("code",[t._v("<字符串>[序号]")]),t._v("。")]),t._v(" "),a("li",[t._v("切片操作：返回字符串中一段字符形成子串，语法为："),a("code",[t._v("<字符串>[开始序号:结束序号]")]),t._v("。值得注意的是，切片形成的子串取不到结束序号字符本身，而只取到其前一位。")])])]),t._v(" "),a("li",[t._v("列表类型：由 0 个或多个数据组成的有序数列。使用 "),a("code",[t._v("[]")]),t._v(" 来表示，每个元素之间使用 "),a("code",[t._v(",")]),t._v(" 分隔。\n"),a("ul",[a("li",[t._v("使用保留字 "),a("code",[t._v("in")]),t._v(" 可以判断某元素是否在列表中。如："),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断字符串 \"TempStr\" 的第 -1 位是否为 'C' 或 'c'.")]),t._v("\nTempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])])])]),t._v(" "),a("h2",{attrs:{id:"语句与函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句与函数"}},[t._v("#")]),t._v(" 语句与函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("赋值语句"),a("br"),t._v("\n由赋值运算符参与的单行语句代码。")]),t._v(" "),a("ul",[a("li",[t._v("赋值语句可以给变量赋予新值。")]),t._v(" "),a("li",[t._v("赋值语句右侧数据类型作用于变量（即赋值运算符右侧数据类型会决定左侧变量的数据类型）。")])])]),t._v(" "),a("li",[a("p",[t._v("分支语句"),a("br"),t._v("\n由条件决定程序运行方向的一组代码。")]),t._v(" "),a("ul",[a("li",[t._v("使用保留字 "),a("code",[t._v("if")]),t._v(", "),a("code",[t._v("elif")]),t._v(", "),a("code",[t._v("else")]),t._v(" 来构成判断条件。如："),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若判断条件为 True 则执行冒号后的语句。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" TempStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'F'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("Python 语法要求每个保留字所在行的最后存在一个 "),a("code",[t._v(":")]),t._v(". 冒号和缩进表示后续语句与条件的从属关系。此冒号不可省略，否则程序将运行错误。")])])]),t._v(" "),a("li",[a("p",[t._v("函数"),a("br"),t._v("\n根据参数产生不同的输出。")])])]),t._v(" "),a("h2",{attrs:{id:"输入与输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入与输出"}},[t._v("#")]),t._v(" 输入与输出")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("输入函数"),a("br"),t._v("\n使用输入函数 "),a("code",[t._v("input()")]),t._v(" 来从控制台获得用户输入。格式为："),a("code",[t._v("<变量> = input(<提示信息字符串>)")]),t._v("。例如：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("TempStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("输出函数"),a("br"),t._v("\n使用输出函数 "),a("code",[t._v("print()")]),t._v(" 以字符串形式向控制台输出结果。格式为："),a("code",[t._v("print(<拟输出的的字符串或字符串变量>)")]),t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入格式错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("格式化输出")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("{}")]),t._v("表示槽，后续变量填充到槽中。例如：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 变量填充到 {} 当中，此句以为将变量 C 填充到 {} 位置时取小数点后两位")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"转换后的温度是{:.2f}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("格式表达"),a("br"),t._v(" "),a("code",[t._v(":.2f")]),t._v(" 表示取小数点后两位")])])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);